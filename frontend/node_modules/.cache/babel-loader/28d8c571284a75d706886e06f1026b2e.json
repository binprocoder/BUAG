{"ast":null,"code":"/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\nexport function parent(path) {\n  if (path.length == 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\nexport function child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\nexport function lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;;AAIA;;;AAGA,OAAM,gBAAiBA,IAAjB,EAA6B;AACjC,MAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AACpB,WAAO,IAAP;AACD;;AACD,MAAIC,KAAK,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,CAAZ;;AACA,MAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,EAAP;AACD;;AACD,MAAIE,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcH,KAAd,CAAd;AACA,SAAOE,OAAP;AACD;AAED,OAAM,eAAgBJ,IAAhB,EAA8BM,SAA9B,EAA+C;AACnD,MAAIC,kBAAkB,GAAGD,SAAS,CAC/BE,KADsB,CAChB,GADgB,EAEtBC,MAFsB,CAEf,UAASC,SAAT,EAAkB;AACxB,WAAOA,SAAS,CAACT,MAAV,GAAmB,CAA1B;AACD,GAJsB,EAKtBU,IALsB,CAKjB,GALiB,CAAzB;;AAMA,MAAIX,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAOM,kBAAP;AACD,GAFD,MAEO;AACL,WAAOP,IAAI,GAAG,GAAP,GAAaO,kBAApB;AACD;AACF;AAED;;;;;;;AAMA,OAAM,uBAAwBP,IAAxB,EAAoC;AACxC,MAAIE,KAAK,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,EAAsBH,IAAI,CAACC,MAAL,GAAc,CAApC,CAAZ;;AACA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAOF,IAAP;AACD,GAFD,MAEO;AACL,WAAOA,IAAI,CAACK,KAAL,CAAWH,KAAK,GAAG,CAAnB,CAAP;AACD;AACF","names":["path","length","index","lastIndexOf","newPath","slice","childPath","canonicalChildPath","split","filter","component","join"],"sources":["../src/implementation/path.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length == 0) {\n    return null;\n  }\n  let index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  let newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  let canonicalChildPath = childPath\n    .split('/')\n    .filter(function(component) {\n      return component.length > 0;\n    })\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  let index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}