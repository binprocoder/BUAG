{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport * as constants from './constants';\nimport * as object from './object';\nexport function makeNormalUrl(urlPart) {\n  return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\nexport function makeDownloadUrl(urlPart) {\n  return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\nexport function makeUploadUrl(urlPart) {\n  return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\nexport function makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n  object.forEach(params, function (key, val) {\n    var nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  }); // Chop off the extra '&' or '?' on the end\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAGA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA,OAAM,uBAAwBC,OAAxB,EAAuC;AAC3C,SAAOF,SAAS,CAACG,UAAV,GAAuBH,SAAS,CAACI,UAAjC,GAA8CF,OAArD;AACD;AAED,OAAM,yBAA0BA,OAA1B,EAAyC;AAC7C,SAAOF,SAAS,CAACK,YAAV,GAAyBL,SAAS,CAACI,UAAnC,GAAgDF,OAAvD;AACD;AAED,OAAM,uBAAwBA,OAAxB,EAAuC;AAC3C,SAAOF,SAAS,CAACG,UAAV,GAAuBH,SAAS,CAACM,gBAAjC,GAAoDJ,OAA3D;AACD;AAED,OAAM,yBAA0BK,MAA1B,EAA2D;AAC/D,MAAIC,MAAM,GAAGC,kBAAb;AACA,MAAIC,SAAS,GAAG,GAAhB;AACAT,QAAM,CAACU,OAAP,CAAeJ,MAAf,EAAuB,UAASK,GAAT,EAAcC,GAAd,EAAiB;AACtC,QAAIC,QAAQ,GAAGN,MAAM,CAACI,GAAD,CAAN,GAAc,GAAd,GAAoBJ,MAAM,CAACK,GAAD,CAAzC;AACAH,aAAS,GAAGA,SAAS,GAAGI,QAAZ,GAAuB,GAAnC;AACD,GAHD,EAH+D,CAQ/D;;AACAJ,WAAS,GAAGA,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACA,SAAOL,SAAP;AACD","names":["constants","object","urlPart","domainBase","apiBaseUrl","downloadBase","apiUploadBaseUrl","params","encode","encodeURIComponent","queryPart","forEach","key","val","nextPart","slice"],"sources":["../src/implementation/url.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport * as constants from './constants';\nimport * as object from './object';\n\nexport function makeNormalUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeDownloadUrl(urlPart: string): string {\n  return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeUploadUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\n\nexport function makeQueryString(params: { [key: string]: string }): string {\n  let encode = encodeURIComponent;\n  let queryPart = '?';\n  object.forEach(params, function(key, val) {\n    let nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  });\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n"]},"metadata":{},"sourceType":"module"}