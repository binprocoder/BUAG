{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\n\nexports.contains = function (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nexports.safeGet = function (obj, key) {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key]; // else return undefined.\n};\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\n\n\nexports.forEach = function (obj, fn) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n};\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\n\n\nexports.extend = function (objTo, objFrom) {\n  exports.forEach(objFrom, function (key, value) {\n    objTo[key] = value;\n  });\n  return objTo;\n};\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\n\n\nexports.clone = function (obj) {\n  return exports.extend({}, obj);\n};\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\n\n\nexports.isNonNullObject = function (obj) {\n  return typeof obj === 'object' && obj !== null;\n};\n\nexports.isEmpty = function (obj) {\n  for (var key in obj) {\n    return false;\n  }\n\n  return true;\n};\n\nexports.getCount = function (obj) {\n  var rv = 0;\n\n  for (var key in obj) {\n    rv++;\n  }\n\n  return rv;\n};\n\nexports.map = function (obj, f, opt_obj) {\n  var res = {};\n\n  for (var key in obj) {\n    res[key] = f.call(opt_obj, obj[key], key, obj);\n  }\n\n  return res;\n};\n\nexports.findKey = function (obj, fn, opt_this) {\n  for (var key in obj) {\n    if (fn.call(opt_this, obj[key], key, obj)) {\n      return key;\n    }\n  }\n\n  return undefined;\n};\n\nexports.findValue = function (obj, fn, opt_this) {\n  var key = exports.findKey(obj, fn, opt_this);\n  return key && obj[key];\n};\n\nexports.getAnyKey = function (obj) {\n  for (var key in obj) {\n    return key;\n  }\n};\n\nexports.getValues = function (obj) {\n  var res = [];\n  var i = 0;\n\n  for (var key in obj) {\n    res[i++] = obj[key];\n  }\n\n  return res;\n};\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\n\n\nexports.every = function (obj, fn) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (!fn(key, obj[key])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;IAgBA;;AAEaA,mBAAW,UAASC,GAAT,EAAcC,GAAd,EAAiB;AACvC,SAAOC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,GAA1C,CAAP;AACD,CAFY;;AAIAF,kBAAU,UAASC,GAAT,EAAcC,GAAd,EAAiB;AACtC,MAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,GAA1C,CAAJ,EAAoD,OAAOD,GAAG,CAACC,GAAD,CAAV,CADd,CAEtC;AACD,CAHY;AAKb;;;;;;;;;AAOaF,kBAAU,UAASC,GAAT,EAAcM,EAAd,EAAgB;AACrC,OAAK,IAAIL,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,GAA1C,CAAJ,EAAoD;AAClDK,QAAE,CAACL,GAAD,EAAMD,GAAG,CAACC,GAAD,CAAT,CAAF;AACD;AACF;AACF,CANY;AAQb;;;;;;;;AAMaF,iBAAS,UAASQ,KAAT,EAAgBC,OAAhB,EAAuB;AAC3CT,kBAAQS,OAAR,EAAiB,UAASP,GAAT,EAAcQ,KAAd,EAAmB;AAClCF,SAAK,CAACN,GAAD,CAAL,GAAaQ,KAAb;AACD,GAFD;AAGA,SAAOF,KAAP;AACD,CALY;AAOb;;;;;;;AAKaR,gBAAQ,UAASC,GAAT,EAAY;AAC/B,SAAOD,eAAO,EAAP,EAAWC,GAAX,CAAP;AACD,CAFY;AAIb;;;;;;;;;AAOaD,0BAAkB,UAASC,GAAT,EAAY;AACzC,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;AACD,CAFY;;AAIAD,kBAAU,UAASC,GAAT,EAAY;AACjC,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALY;;AAOAD,mBAAW,UAASC,GAAT,EAAY;AAClC,MAAIU,EAAE,GAAG,CAAT;;AACA,OAAK,IAAIT,GAAT,IAAgBD,GAAhB,EAAqB;AACnBU,MAAE;AACH;;AACD,SAAOA,EAAP;AACD,CANY;;AAQAX,cAAM,UAASC,GAAT,EAAcW,CAAd,EAAiBC,OAAjB,EAAyB;AAC1C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIZ,GAAT,IAAgBD,GAAhB,EAAqB;AACnBa,OAAG,CAACZ,GAAD,CAAH,GAAWU,CAAC,CAACN,IAAF,CAAOO,OAAP,EAAgBZ,GAAG,CAACC,GAAD,CAAnB,EAA0BA,GAA1B,EAA+BD,GAA/B,CAAX;AACD;;AACD,SAAOa,GAAP;AACD,CANY;;AAQAd,kBAAU,UAASC,GAAT,EAAcM,EAAd,EAAkBQ,QAAlB,EAA2B;AAChD,OAAK,IAAIb,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIM,EAAE,CAACD,IAAH,CAAQS,QAAR,EAAkBd,GAAG,CAACC,GAAD,CAArB,EAA4BA,GAA5B,EAAiCD,GAAjC,CAAJ,EAA2C;AACzC,aAAOC,GAAP;AACD;AACF;;AACD,SAAOc,SAAP;AACD,CAPY;;AASAhB,oBAAY,UAASC,GAAT,EAAcM,EAAd,EAAkBQ,QAAlB,EAA2B;AAClD,MAAIb,GAAG,GAAGF,gBAAQC,GAAR,EAAaM,EAAb,EAAiBQ,QAAjB,CAAV;AACA,SAAOb,GAAG,IAAID,GAAG,CAACC,GAAD,CAAjB;AACD,CAHY;;AAKAF,oBAAY,UAASC,GAAT,EAAY;AACnC,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,WAAOC,GAAP;AACD;AACF,CAJY;;AAMAF,oBAAY,UAASC,GAAT,EAAY;AACnC,MAAIa,GAAG,GAAG,EAAV;AACA,MAAIG,CAAC,GAAG,CAAR;;AACA,OAAK,IAAIf,GAAT,IAAgBD,GAAhB,EAAqB;AACnBa,OAAG,CAACG,CAAC,EAAF,CAAH,GAAWhB,GAAG,CAACC,GAAD,CAAd;AACD;;AACD,SAAOY,GAAP;AACD,CAPY;AASb;;;;;;;;;;AAQad,gBAAQ,UACnBC,GADmB,EAEnBM,EAFmB,EAEc;AAEjC,OAAK,IAAIL,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,GAA1C,CAAJ,EAAoD;AAClD,UAAI,CAACK,EAAE,CAACL,GAAD,EAAMD,GAAG,CAACC,GAAD,CAAT,CAAP,EAAwB;AACtB,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAO,IAAP;AACD,CAZY","names":["exports","obj","key","Object","prototype","hasOwnProperty","call","fn","objTo","objFrom","value","rv","f","opt_obj","res","opt_this","undefined","i"],"sources":["../src/obj.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\n\nexport const contains = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nexport const safeGet = function(obj, key) {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n  // else return undefined.\n};\n\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexport const forEach = function(obj, fn) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n};\n\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nexport const extend = function(objTo, objFrom) {\n  forEach(objFrom, function(key, value) {\n    objTo[key] = value;\n  });\n  return objTo;\n};\n\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nexport const clone = function(obj) {\n  return extend({}, obj);\n};\n\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nexport const isNonNullObject = function(obj) {\n  return typeof obj === 'object' && obj !== null;\n};\n\nexport const isEmpty = function(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n};\n\nexport const getCount = function(obj) {\n  var rv = 0;\n  for (var key in obj) {\n    rv++;\n  }\n  return rv;\n};\n\nexport const map = function(obj, f, opt_obj?) {\n  var res = {};\n  for (var key in obj) {\n    res[key] = f.call(opt_obj, obj[key], key, obj);\n  }\n  return res;\n};\n\nexport const findKey = function(obj, fn, opt_this?) {\n  for (var key in obj) {\n    if (fn.call(opt_this, obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n};\n\nexport const findValue = function(obj, fn, opt_this?) {\n  var key = findKey(obj, fn, opt_this);\n  return key && obj[key];\n};\n\nexport const getAnyKey = function(obj) {\n  for (var key in obj) {\n    return key;\n  }\n};\n\nexport const getValues = function(obj) {\n  var res = [];\n  var i = 0;\n  for (var key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n};\n\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexport const every = function<V>(\n  obj: Object,\n  fn: (k: string, v?: V) => boolean\n): boolean {\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (!fn(key, obj[key])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"script"}