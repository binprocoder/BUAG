{"ast":null,"code":"import binhluanchudeApi from \"../../../../api/binhluanchudeApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const binhluanchudeData = createAsyncThunk('binhluanchudes/binhluanchudeData', async () => {\n  const binhluanchude = await binhluanchudeApi.getAll();\n  return binhluanchude;\n});\nconst Binhluanchude = createSlice({\n  name: \"binhluanchudes\",\n  initialState: {\n    binhluanchude: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    addbinhluanchude: (state, action) => {\n      binhluanchudeApi.postbinhluan(action.payload);\n    },\n    removebinhluanchude: (state, action) => {\n      binhluanchudeApi.deletebinhluan(action.payload);\n    },\n    updatebinhluanchude: (state, action) => {\n      binhluanchudeApi.editbinhluan(action.payload);\n    },\n    getallbinhluan: (state, action) => {\n      binhluanchudeApi.getallbinhluan();\n    }\n  },\n  extraReducers: {\n    [binhluanchudeData.pending]: state => {\n      state.loading = true;\n    },\n    [binhluanchudeData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [binhluanchudeData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.binhluanchude = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Binhluanchude;\nexport const {\n  addbinhluanchude,\n  removebinhluanchude,\n  updatebinhluanchude\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/BUAG/frontend/src/features/container/admin/Binhluanchude/binhluanchudeSlice.js"],"names":["binhluanchudeApi","createSlice","createAsyncThunk","require","binhluanchudeData","binhluanchude","getAll","Binhluanchude","name","initialState","loading","error","reducers","addbinhluanchude","state","action","postbinhluan","payload","removebinhluanchude","deletebinhluan","updatebinhluanchude","editbinhluan","getallbinhluan","extraReducers","pending","rejected","fulfilled","reducer","actions"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,kCAA7B;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAAC,kCAAD,EAAqC,YAAW;AAC7F,QAAMG,aAAa,GAAG,MAAOL,gBAAgB,CAACM,MAAjB,EAA7B;AACA,SAAOD,aAAP;AACH,CAHgD,CAA1C;AAIP,MAAME,aAAa,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,gBADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,aAAa,EAAE,EADL;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFgB;AAO9BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCf,MAAAA,gBAAgB,CAACgB,YAAjB,CAA8BD,MAAM,CAACE,OAArC;AACH,KAHK;AAINC,IAAAA,mBAAmB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACpCf,MAAAA,gBAAgB,CAACmB,cAAjB,CAAgCJ,MAAM,CAACE,OAAvC;AACH,KANK;AAONG,IAAAA,mBAAmB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACpCf,MAAAA,gBAAgB,CAACqB,YAAjB,CAA8BN,MAAM,CAACE,OAArC;AACH,KATK;AAUNK,IAAAA,cAAc,EAAE,CAACR,KAAD,EAAOC,MAAP,KAAkB;AAC9Bf,MAAAA,gBAAgB,CAACsB,cAAjB;AACH;AAZK,GAPoB;AAqB9BC,EAAAA,aAAa,EAAE;AACX,KAACnB,iBAAiB,CAACoB,OAAnB,GAA8BV,KAAD,IAAW;AACpCA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,iBAAiB,CAACqB,QAAnB,GAA8B,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,iBAAiB,CAACsB,SAAnB,GAA+B,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACE,OAA7B;AACH;AAXU;AArBe,CAAD,CAAjC;AAmCA,MAAM;AAAEU,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBrB,aAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA,gBAAF;AAAoBK,EAAAA,mBAApB;AAAyCE,EAAAA;AAAzC,IAAiEQ,OAAvE;AAEP,eAAeD,OAAf","sourcesContent":["import binhluanchudeApi from \"../../../../api/binhluanchudeApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const binhluanchudeData = createAsyncThunk('binhluanchudes/binhluanchudeData', async () =>{\r\n    const binhluanchude = await  binhluanchudeApi.getAll();\r\n    return binhluanchude;\r\n})\r\nconst Binhluanchude = createSlice({\r\n    name: \"binhluanchudes\",\r\n    initialState: {\r\n        binhluanchude: [],\r\n        loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        addbinhluanchude: (state, action) => {\r\n            binhluanchudeApi.postbinhluan(action.payload);\r\n        },\r\n        removebinhluanchude: (state, action) => {\r\n            binhluanchudeApi.deletebinhluan(action.payload);\r\n        },\r\n        updatebinhluanchude: (state, action) => {\r\n            binhluanchudeApi.editbinhluan(action.payload);\r\n        },\r\n        getallbinhluan: (state,action) => {\r\n            binhluanchudeApi.getallbinhluan();\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [binhluanchudeData.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [binhluanchudeData.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [binhluanchudeData.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.binhluanchude = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Binhluanchude;\r\nexport const { addbinhluanchude, removebinhluanchude, updatebinhluanchude } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}