{"ast":null,"code":"'use strict';\n\nmodule.exports = Workflows;\n\nconst isArray = require('lodash/isArray');\n\nconst isString = require('lodash/isString');\n\nconst isInteger = require('lodash/isInteger');\n\nconst isPlainObject = require('lodash/isPlainObject');\n\nconst Models = require('./models');\n\nconst request = require('./request').request;\n\nconst MonkeyLearnError = require('./monkeylearn-error');\n\nfunction Workflows(ml) {\n  Models.call(this, ml, `${ml.settings.base_url}workflows/`);\n  this.steps = new WorkflowSteps(this);\n  this.data = new WorkflowData(this);\n  this.custom_fields = new WorkflowCustomFields(this);\n}\n\nWorkflows.prototype = Object.create(Models.prototype);\nWorkflows.prototype.constructor = Workflows;\nWorkflows.prototype.run = undefined;\nWorkflows.prototype.list = undefined; // workflows detail is handled by Models\n\nWorkflows.prototype.create = function (params) {\n  return new Promise((resolve, reject) => {\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the creation parameters is required.');\n    }\n\n    resolve();\n  }).then(_ => request(this.ml, {\n    url: `${this.base_url}`,\n    method: 'POST',\n    body: params\n  }));\n};\n\nWorkflows.prototype.delete = function (model_id) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n\n    resolve();\n  }).then(_ => request(this.ml, {\n    url: `${this.base_url}${model_id}/`,\n    method: 'DELETE'\n  }));\n};\n\nfunction WorkflowSteps(workflows) {\n  this.ml = workflows.ml;\n  this.workflows = workflows;\n}\n\nWorkflowSteps.prototype.create = function (model_id, params) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the creation parameters is required.');\n    }\n\n    resolve();\n  }).then(_ => request(this.ml, {\n    url: `${this.workflows.base_url}${model_id}/steps/`,\n    method: 'POST',\n    body: params\n  }));\n};\n\nfunction WorkflowData(workflows) {\n  this.ml = workflows.ml;\n  this.workflows = workflows;\n}\n\nWorkflowData.prototype.create = function (model_id, data) {\n  let params = {\n    'data': data\n  };\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n\n    if (!isArray(data)) {\n      throw new MonkeyLearnError('', null, 'A data array is required');\n    }\n\n    resolve();\n  }).then(_ => request(this.ml, {\n    url: `${this.workflows.base_url}${model_id}/data/`,\n    method: 'POST',\n    body: params\n  }));\n};\n\nWorkflowData.prototype.list = function (model_id, params) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n\n    params = params || {};\n\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the list parameters is required.');\n    }\n\n    resolve();\n  }).then(_ => request(this.ml, {\n    url: `${this.workflows.base_url}${model_id}/data/`,\n    method: 'GET',\n    query_params: params\n  }));\n};\n\nfunction WorkflowCustomFields(workflows) {\n  this.ml = workflows.ml;\n  this.workflows = workflows;\n}\n\nWorkflowCustomFields.prototype.create = function (model_id, params) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the creation parameters is required.');\n    }\n\n    resolve();\n  }).then(_ => request(this.ml, {\n    url: `${this.workflows.base_url}${model_id}/custom-fields/`,\n    method: 'POST',\n    body: params\n  }));\n};","map":{"version":3,"sources":["D:/Download/BUAG-tienPush/frontend/node_modules/monkeylearn/lib/workflows.js"],"names":["module","exports","Workflows","isArray","require","isString","isInteger","isPlainObject","Models","request","MonkeyLearnError","ml","call","settings","base_url","steps","WorkflowSteps","data","WorkflowData","custom_fields","WorkflowCustomFields","prototype","Object","create","constructor","run","undefined","list","params","Promise","resolve","reject","then","_","url","method","body","delete","model_id","workflows","query_params"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = Workflows;\n\nconst isArray = require('lodash/isArray');\nconst isString = require('lodash/isString');\nconst isInteger = require('lodash/isInteger');\nconst isPlainObject = require('lodash/isPlainObject');\n\nconst Models = require('./models');\nconst request = require('./request').request;\nconst MonkeyLearnError = require('./monkeylearn-error');\n\n\nfunction Workflows(ml) {\n  Models.call(this, ml, `${ml.settings.base_url}workflows/`)\n  this.steps = new WorkflowSteps(this);\n  this.data = new WorkflowData(this);\n  this.custom_fields = new WorkflowCustomFields(this);\n}\n\nWorkflows.prototype = Object.create(Models.prototype);\nWorkflows.prototype.constructor = Workflows;\n\nWorkflows.prototype.run = undefined;\nWorkflows.prototype.list = undefined;\n\n// workflows detail is handled by Models\n\nWorkflows.prototype.create = function(params) {\n  return new Promise((resolve, reject) => {\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the creation parameters is required.');\n    }\n    resolve();\n  })\n\n  .then(_ =>\n    request(this.ml, {\n      url: `${this.base_url}`,\n      method: 'POST',\n      body: params\n    })\n  )\n};\n\nWorkflows.prototype.delete = function(model_id) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n    resolve();\n  })\n\n  .then(_ =>\n    request(this.ml, {\n      url: `${this.base_url}${model_id}/`,\n      method: 'DELETE',\n    })\n  )\n};\n\nfunction WorkflowSteps(workflows) {\n  this.ml = workflows.ml;\n  this.workflows = workflows;\n}\n\nWorkflowSteps.prototype.create = function(model_id, params) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the creation parameters is required.');\n    }\n    resolve();\n  })\n\n  .then(_ =>\n    request(this.ml, {\n      url: `${this.workflows.base_url}${model_id}/steps/`,\n      method: 'POST',\n      body: params\n    })\n  )\n}\n\nfunction WorkflowData(workflows) {\n  this.ml = workflows.ml;\n  this.workflows = workflows;\n}\n\nWorkflowData.prototype.create = function(model_id, data) {\n  let params = {'data': data}\n\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n    if (!isArray(data)){\n      throw new MonkeyLearnError('', null, 'A data array is required');\n    }\n    resolve();\n  })\n\n  .then(_ =>\n    request(this.ml, {\n      url: `${this.workflows.base_url}${model_id}/data/`,\n      method: 'POST',\n      body: params\n    })\n  )\n}\n\nWorkflowData.prototype.list = function(model_id, params) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n    params = params || {};\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the list parameters is required.');\n    }\n    resolve();\n  })\n\n  .then(_ =>\n    request(this.ml, {\n      url: `${this.workflows.base_url}${model_id}/data/`,\n      method: 'GET',\n      query_params: params\n    })\n  )\n}\n\nfunction WorkflowCustomFields(workflows) {\n  this.ml = workflows.ml;\n  this.workflows = workflows;\n}\n\nWorkflowCustomFields.prototype.create = function(model_id, params) {\n  return new Promise((resolve, reject) => {\n    if (!isString(model_id)) {\n      throw new MonkeyLearnError('', null, 'A model_id string is required.');\n    }\n    if (!isPlainObject(params)) {\n      throw new MonkeyLearnError('', null, 'An object containing the creation parameters is required.');\n    }\n    resolve();\n  })\n\n  .then(_ =>\n    request(this.ml, {\n      url: `${this.workflows.base_url}${model_id}/custom-fields/`,\n      method: 'POST',\n      body: params\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"script"}