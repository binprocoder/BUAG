{"ast":null,"code":"/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nimport * as object from './object';\nimport * as constants from './constants';\n/**\r\n * @struct\r\n */\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map_ = {};\n    this.id_ = constants.minSafeInteger;\n  }\n  /**\r\n   * Registers the given request with this map.\r\n   * The request is unregistered when it completes.\r\n   * @param r The request to register.\r\n   */\n\n\n  RequestMap.prototype.addRequest = function (r) {\n    var id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    var self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n\n    r.getPromise().then(unmap, unmap);\n  };\n  /**\r\n   * Cancels all registered requests.\r\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    object.forEach(this.map_, function (key, val) {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  };\n\n  return RequestMap;\n}();\n\nexport { RequestMap };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,OAAO,KAAKA,MAAZ,MAAwB,UAAxB;AAGA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA;;;;AAGA;AAAA;AAAA;AAIE;AAHQ,gBAAwC,EAAxC;AAIN,SAAKC,GAAL,GAAWD,SAAS,CAACE,cAArB;AACD;AAED;;;;;;;AAKAC,8CAAWC,CAAX,EAA0B;AACxB,QAAIC,EAAE,GAAG,KAAKJ,GAAd;AACA,SAAKA,GAAL;AACA,SAAKK,IAAL,CAAUD,EAAV,IAAgBD,CAAhB;AACA,QAAIG,IAAI,GAAG,IAAX;;AAEA;AACE,aAAOA,IAAI,CAACD,IAAL,CAAUD,EAAV,CAAP;AACD;;AACDD,KAAC,CAACI,UAAF,GAAeC,IAAf,CAAoBC,KAApB,EAA2BA,KAA3B;AACD,GAVD;AAYA;;;;;AAGAP;AACEJ,UAAM,CAACY,OAAP,CAAe,KAAKL,IAApB,EAA0B,UAACM,GAAD,EAAcC,GAAd,EAA+B;AACvD,UAAIA,GAAJ,EAAS;AACPA,WAAG,CAACC,MAAJ,CAAW,IAAX;AACD;AACF,KAJD;AAKA,SAAKR,IAAL,GAAY,EAAZ;AACD,GAPD;;AAQF;AApCA","names":["object","constants","id_","minSafeInteger","RequestMap","r","id","map_","self","getPromise","then","unmap","forEach","key","val","cancel"],"sources":["../src/implementation/requestmap.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as object from './object';\nimport * as RequestExports from './request';\nimport { Request } from './request';\nimport * as constants from './constants';\n\n/**\n * @struct\n */\nexport class RequestMap {\n  private map_: { [key: number]: Request<any> } = {};\n  private id_: number;\n\n  constructor() {\n    this.id_ = constants.minSafeInteger;\n  }\n\n  /**\n   * Registers the given request with this map.\n   * The request is unregistered when it completes.\n   * @param r The request to register.\n   */\n  addRequest(r: Request<any>) {\n    let id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    let self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n    r.getPromise().then(unmap, unmap);\n  }\n\n  /**\n   * Cancels all registered requests.\n   */\n  clear() {\n    object.forEach(this.map_, (key: string, val: Request<any>) => {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  }\n}\n"]},"metadata":{},"sourceType":"module"}