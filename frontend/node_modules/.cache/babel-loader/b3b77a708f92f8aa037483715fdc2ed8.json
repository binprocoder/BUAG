{"ast":null,"code":"import hoadonApi from \"../../../../api/phanhoiApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const hoadonData = createAsyncThunk('hoadons/hoadonData', async () => {\n  const hoadon = await hoadonApi.getAll();\n  return hoadon;\n});\nconst Hoadon = createSlice({\n  name: \"hoadons\",\n  initialState: {\n    hoadon: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    addhoadon: (state, action) => {\n      hoadonApi.posthoadon(action.payload);\n    },\n    removehoadon: (state, action) => {\n      hoadonApi.deletehoadon(action.payload);\n    },\n    updatehoadon: (state, action) => {\n      hoadonApi.edithoadon(action.payload);\n    }\n  },\n  extraReducers: {\n    [hoadonData.pending]: state => {\n      state.loading = true;\n    },\n    [hoadonData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [hoadonData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.hoadon = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Hoadon;\nexport const {\n  addhoadon,\n  removehoadon,\n  updatehoadon\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Bin Tran/Desktop/BUAG/BUAG/frontend/src/features/container/admin/Hoadon/hoadonSlice.js"],"names":["hoadonApi","createSlice","createAsyncThunk","require","hoadonData","hoadon","getAll","Hoadon","name","initialState","loading","error","reducers","addhoadon","state","action","posthoadon","payload","removehoadon","deletehoadon","updatehoadon","edithoadon","extraReducers","pending","rejected","fulfilled","reducer","actions"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,oBAAD,EAAuB,YAAY;AACzE,QAAMG,MAAM,GAAG,MAAML,SAAS,CAACM,MAAV,EAArB;AACA,SAAOD,MAAP;AACH,CAHyC,CAAnC;AAIP,MAAME,MAAM,GAAGN,WAAW,CAAC;AACvBO,EAAAA,IAAI,EAAE,SADiB;AAEvBC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,MAAM,EAAE,EADE;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFS;AAOvBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1Bf,MAAAA,SAAS,CAACgB,UAAV,CAAqBD,MAAM,CAACE,OAA5B;AACH,KAHK;AAINC,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7Bf,MAAAA,SAAS,CAACmB,YAAV,CAAuBJ,MAAM,CAACE,OAA9B;AACH,KANK;AAONG,IAAAA,YAAY,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7Bf,MAAAA,SAAS,CAACqB,UAAV,CAAqBN,MAAM,CAACE,OAA5B;AACH;AATK,GAPa;AAkBvBK,EAAAA,aAAa,EAAE;AACX,KAAClB,UAAU,CAACmB,OAAZ,GAAuBT,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,UAAU,CAACoB,QAAZ,GAAuB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,UAAU,CAACqB,SAAZ,GAAwB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACE,OAAtB;AACH;AAXU;AAlBQ,CAAD,CAA1B;AAgCA,MAAM;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBpB,MAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA,SAAF;AAAaK,EAAAA,YAAb;AAA2BE,EAAAA;AAA3B,IAA4CO,OAAlD;AAEP,eAAeD,OAAf","sourcesContent":["import hoadonApi from \"../../../../api/phanhoiApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const hoadonData = createAsyncThunk('hoadons/hoadonData', async () => {\r\n    const hoadon = await hoadonApi.getAll();\r\n    return hoadon;\r\n})\r\nconst Hoadon = createSlice({\r\n    name: \"hoadons\",\r\n    initialState: {\r\n        hoadon: [],\r\n        loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        addhoadon: (state, action) => {\r\n            hoadonApi.posthoadon(action.payload);\r\n        },\r\n        removehoadon: (state, action) => {\r\n            hoadonApi.deletehoadon(action.payload);\r\n        },\r\n        updatehoadon: (state, action) => {\r\n            hoadonApi.edithoadon(action.payload);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [hoadonData.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [hoadonData.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [hoadonData.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.hoadon = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Hoadon;\r\nexport const { addhoadon, removehoadon, updatehoadon } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}