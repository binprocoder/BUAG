{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * Root reference for iframes.\n */\n\n\nvar root;\n\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn('Using browser-only version of superagent in non-browser environment');\n  root = void 0;\n} else {\n  // Web Worker\n  root = self;\n}\n\nvar Emitter = require('component-emitter');\n\nvar safeStringify = require('fast-safe-stringify');\n\nvar qs = require('qs');\n\nvar RequestBase = require('./request-base');\n\nvar _require = require('./utils'),\n    isObject = _require.isObject,\n    mixin = _require.mixin,\n    hasOwn = _require.hasOwn;\n\nvar ResponseBase = require('./response-base');\n\nvar Agent = require('./agent-base');\n/**\n * Noop.\n */\n\n\nfunction noop() {}\n/**\n * Expose `request`.\n */\n\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  } // url first\n\n\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\nvar request = exports;\nexports.Request = Request;\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest && (!root.location || root.location.protocol !== 'file:' || !root.ActiveXObject)) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch (_unused) {\n    /**/\n  }\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch (_unused2) {\n    /**/\n  }\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch (_unused3) {\n    /**/\n  }\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch (_unused4) {\n    /**/\n  }\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\n\nvar trim = ''.trim ? function (s) {\n  return s.trim();\n} : function (s) {\n  return s.replace(/(^\\s*|\\s*$)/g, '');\n};\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(object) {\n  if (!isObject(object)) return object;\n  var pairs = [];\n\n  for (var key in object) {\n    if (hasOwn(object, key)) pushEncodedKeyValuePair(pairs, key, object[key]);\n  }\n\n  return pairs.join('&');\n}\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\n\nfunction pushEncodedKeyValuePair(pairs, key, value) {\n  if (value === undefined) return;\n\n  if (value === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    var _iterator = _createForOfIteratorHelper(value),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        pushEncodedKeyValuePair(pairs, key, v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (isObject(value)) {\n    for (var subkey in value) {\n      if (hasOwn(value, subkey)) pushEncodedKeyValuePair(pairs, \"\".concat(key, \"[\").concat(subkey, \"]\"), value[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(value));\n  }\n}\n/**\n * Expose serialization method.\n */\n\n\nrequest.serializeObject = serialize;\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(string_) {\n  var object = {};\n  var pairs = string_.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, length_ = pairs.length; i < length_; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n\n    if (pos === -1) {\n      object[decodeURIComponent(pair)] = '';\n    } else {\n      object[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return object;\n}\n/**\n * Expose parser.\n */\n\n\nrequest.parseString = parseString;\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(string_) {\n  var lines = string_.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var value;\n\n  for (var i = 0, length_ = lines.length; i < length_; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    value = trim(line.slice(index + 1));\n    fields[field] = value;\n  }\n\n  return fields;\n}\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\n\nfunction Response(request_) {\n  this.req = request_;\n  this.xhr = this.req.xhr; // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\n  this.text = this.req.method !== 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status; // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers; // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && request_._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method === 'HEAD' ? null : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\nmixin(Response.prototype, ResponseBase.prototype);\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (string_) {\n  var parse = request.parse[this.type];\n\n  if (this.req._parser) {\n    return this.req._parser(this, string_);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && string_ && (string_.length > 0 || string_ instanceof Object) ? parse(string_) : null;\n};\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\n\nResponse.prototype.toError = function () {\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n  var message = \"cannot \".concat(method, \" \").concat(url, \" (\").concat(this.status, \")\");\n  var error = new Error(message);\n  error.status = this.status;\n  error.method = method;\n  error.url = url;\n  return error;\n};\n/**\n * Expose `Response`.\n */\n\n\nrequest.Response = Response;\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n\n  this._header = {}; // coerces header names to lowercase\n\n  this.on('end', function () {\n    var error = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err) {\n      error = new Error('Parser is unable to parse the response');\n      error.parse = true;\n      error.original = err; // issue #675: return the raw response if the response parsing fails\n\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        error.rawResponse = typeof self.xhr.responseType === 'undefined' ? self.xhr.responseText : self.xhr.response; // issue #876: return the http status code if the response parsing fails\n\n        error.status = self.xhr.status ? self.xhr.status : null;\n        error.statusCode = error.status; // backwards-compat only\n      } else {\n        error.rawResponse = null;\n        error.status = null;\n      }\n\n      return self.callback(error);\n    }\n\n    self.emit('response', res);\n    var new_error;\n\n    try {\n      if (!self._isResponseOK(res)) {\n        new_error = new Error(res.statusText || res.text || 'Unsuccessful HTTP response');\n      }\n    } catch (err) {\n      new_error = err; // ok() callback can throw\n    } // #1000 don't catch errors from the callback to avoid double calling it\n\n\n    if (new_error) {\n      new_error.original = error;\n      new_error.response = res;\n      new_error.status = res.status;\n      self.callback(new_error, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n// eslint-disable-next-line new-cap\n\n\nEmitter(Request.prototype);\nmixin(Request.prototype, RequestBase.prototype);\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n\n  if (_typeof(pass) === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  var encoder = options.encoder ? options.encoder : function (string) {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n  return this._auth(user, pass, options, encoder);\n};\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.query = function (value) {\n  if (typeof value !== 'string') value = serialize(value);\n  if (value) this._query.push(value);\n  return this;\n};\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (error) {\n    if (this._maxRetries) error.retries = this._retries - 1;\n    this.emit('error', error);\n  }\n\n  fn(error, res);\n};\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\n\nRequest.prototype.crossDomainError = function () {\n  var error = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  error.crossDomain = true;\n  error.status = this.status;\n  error.method = this.method;\n  error.url = this.url;\n  this.callback(error);\n}; // This only warns, because the request is still likely to work\n\n\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca; // This throws, because it can't send/receive data as expected\n\nRequest.prototype.write = function () {\n  throw new Error('Streaming is not supported in browser version of superagent');\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\n\nRequest.prototype._isHost = function (object) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return object && _typeof(object) === 'object' && !Array.isArray(object) && Object.prototype.toString.call(object) !== '[object Object]';\n};\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn('Warning: .end() was called twice. This is not supported in superagent');\n  }\n\n  this._endCalled = true; // store callback\n\n  this._callback = fn || noop; // querystring\n\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  var self = this; // upload timeout it's wokrs only if deadline timeout is off\n\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(function () {\n      self._timeoutError('Upload timeout of ', self._uploadTimeout, 'ETIMEDOUT');\n    }, this._uploadTimeout);\n  }\n}; // eslint-disable-next-line complexity\n\n\nRequest.prototype._end = function () {\n  if (this._aborted) return this.callback(new Error('The request has been aborted even before .end() was called'));\n  var self = this;\n  this.xhr = request.getXHR();\n  var xhr = this.xhr;\n  var data = this._formData || this._data;\n\n  this._setTimeouts(); // state change\n\n\n  xhr.addEventListener('readystatechange', function () {\n    var readyState = xhr.readyState;\n\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    } // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n\n\n    var status;\n\n    try {\n      status = xhr.status;\n    } catch (_unused5) {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  }); // progress\n\n  var handleProgress = function handleProgress(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', handleProgress.bind(null, 'upload'));\n      }\n    } catch (_unused6) {// Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  } // initiate request\n\n\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  } // CORS\n\n\n  if (this._withCredentials) xhr.withCredentials = true; // body\n\n  if (!this._formData && this.method !== 'GET' && this.method !== 'HEAD' && typeof data !== 'string' && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n\n    var _serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\n    if (!_serialize && isJSON(contentType)) {\n      _serialize = request.serialize['application/json'];\n    }\n\n    if (_serialize) data = _serialize(data);\n  } // set header fields\n\n\n  for (var field in this.header) {\n    if (this.header[field] === null) continue;\n    if (hasOwn(this.header, field)) xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  } // send stuff\n\n\n  this.emit('request', this); // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = function () {\n  return new Agent();\n};\n\nvar _loop = function _loop() {\n  var method = _arr[_i];\n\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    var request_ = new request.Request(method, url);\n\n    this._setDefaults(request_);\n\n    if (fn) {\n      request_.end(fn);\n    }\n\n    return request_;\n  };\n};\n\nfor (var _i = 0, _arr = ['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE']; _i < _arr.length; _i++) {\n  _loop();\n}\n\nAgent.prototype.del = Agent.prototype.delete;\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function (url, data, fn) {\n  var request_ = request('GET', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.head = function (url, data, fn) {\n  var request_ = request('HEAD', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.options = function (url, data, fn) {\n  var request_ = request('OPTIONS', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nfunction del(url, data, fn) {\n  var request_ = request('DELETE', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n}\n\nrequest.del = del;\nrequest.delete = del;\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function (url, data, fn) {\n  var request_ = request('PATCH', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.post = function (url, data, fn) {\n  var request_ = request('POST', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.put = function (url, data, fn) {\n  var request_ = request('PUT', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};","map":{"version":3,"sources":["../src/client.js"],"names":["root","console","Emitter","require","safeStringify","qs","RequestBase","isObject","mixin","hasOwn","ResponseBase","Agent","module","exports","arguments","request","trim","s","pairs","pushEncodedKeyValuePair","object","value","encodeURI","Array","v","encodeURIComponent","string_","i","length_","pair","pos","decodeURIComponent","html","json","xml","urlencoded","form","JSON","parse","lines","fields","line","index","field","status","parseHeader","request_","Response","isJSON","req","method","url","message","error","self","res","new_error","Request","pass","options","type","encoder","btoa","serialize","file","fn","Object","setTimeout","xhr","data","readyState","clearTimeout","handleProgress","e","contentType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA,IAAA,IAAA;;AACA,IAAI,OAAA,MAAA,KAAJ,WAAA,EAAmC;AACjC;AACAA,EAAAA,IAAI,GAAJA,MAAAA;AAFF,CAAA,MAGO,IAAI,OAAA,IAAA,KAAJ,WAAA,EAAiC;AACtC;AACAC,EAAAA,OAAO,CAAPA,IAAAA,CAAAA,qEAAAA;AAGAD,EAAAA,IAAI,GAAA,KAAJA,CAAAA;AALK,CAAA,MAMA;AACL;AACAA,EAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,IAAME,OAAO,GAAGC,OAAO,CAAvB,mBAAuB,CAAvB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAA7B,qBAA6B,CAA7B;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAlB,IAAkB,CAAlB;;AACA,IAAMG,WAAW,GAAGH,OAAO,CAA3B,gBAA2B,CAA3B;;AACA,IAAA,QAAA,GAAoCA,OAAO,CAA3C,SAA2C,CAA3C;AAAA,IAAQI,QAAR,GAAA,QAAA,CAAA,QAAA;AAAA,IAAkBC,KAAlB,GAAA,QAAA,CAAA,KAAA;AAAA,IAAyBC,MAAzB,GAAA,QAAA,CAAA,MAAA;;AACA,IAAMC,YAAY,GAAGP,OAAO,CAA5B,iBAA4B,CAA5B;;AACA,IAAMQ,KAAK,GAAGR,OAAO,CAArB,cAAqB,CAArB;AAEA;AACA;AACA;;;AAEA,SAAA,IAAA,GAAgB,CAAE;AAElB;AACA;AACA;;;AAEAS,MAAM,CAANA,OAAAA,GAAiB,UAAA,MAAA,EAAA,GAAA,EAAuB;AACtC;AACA,MAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AAC7B,WAAO,IAAIC,OAAO,CAAX,OAAA,CAAA,KAAA,EAAA,MAAA,EAAA,GAAA,CAAP,GAAO,CAAP;AAHoC,GAAA,CAMtC;;;AACA,MAAIC,SAAS,CAATA,MAAAA,KAAJ,CAAA,EAA4B;AAC1B,WAAO,IAAID,OAAO,CAAX,OAAA,CAAA,KAAA,EAAP,MAAO,CAAP;AACD;;AAED,SAAO,IAAIA,OAAO,CAAX,OAAA,CAAA,MAAA,EAAP,GAAO,CAAP;AAXFD,CAAAA;;AAcAC,OAAO,GAAGD,MAAM,CAAhBC,OAAAA;AAEA,IAAME,OAAO,GAAb,OAAA;AAEAF,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;AAEA;AACA;AACA;;AAEAE,OAAO,CAAPA,MAAAA,GAAiB,YAAM;AACrB,MACEf,IAAI,CAAJA,cAAAA,KACC,CAACA,IAAI,CAAL,QAAA,IACCA,IAAI,CAAJA,QAAAA,CAAAA,QAAAA,KADD,OAAA,IAEC,CAACA,IAAI,CAJT,aACEA,CADF,EAKE;AACA,WAAO,IAAP,cAAO,EAAP;AACD;;AAED,MAAI;AACF,WAAO,IAAA,aAAA,CAAP,mBAAO,CAAP;AADF,GAAA,CAEE,OAAA,OAAA,EAAM;AACN;AACD;;AAED,MAAI;AACF,WAAO,IAAA,aAAA,CAAP,oBAAO,CAAP;AADF,GAAA,CAEE,OAAA,QAAA,EAAM;AACN;AACD;;AAED,MAAI;AACF,WAAO,IAAA,aAAA,CAAP,oBAAO,CAAP;AADF,GAAA,CAEE,OAAA,QAAA,EAAM;AACN;AACD;;AAED,MAAI;AACF,WAAO,IAAA,aAAA,CAAP,gBAAO,CAAP;AADF,GAAA,CAEE,OAAA,QAAA,EAAM;AACN;AACD;;AAED,QAAM,IAAA,KAAA,CAAN,uDAAM,CAAN;AAlCFe,CAAAA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,IAAI,GAAG,GAAA,IAAA,GAAU,UAAA,CAAA,EAAA;AAAA,SAAOC,CAAC,CAAR,IAAOA,EAAP;AAAV,CAAA,GAA4B,UAAA,CAAA,EAAA;AAAA,SAAOA,CAAC,CAADA,OAAAA,CAAAA,cAAAA,EAAP,EAAOA,CAAP;AAAzC,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAA,SAAA,CAAA,MAAA,EAA2B;AACzB,MAAI,CAACV,QAAQ,CAAb,MAAa,CAAb,EAAuB,OAAA,MAAA;AACvB,MAAMW,KAAK,GAAX,EAAA;;AACA,OAAK,IAAL,GAAA,IAAA,MAAA,EAA0B;AACxB,QAAIT,MAAM,CAAA,MAAA,EAAV,GAAU,CAAV,EAAyBU,uBAAuB,CAAA,KAAA,EAAA,GAAA,EAAaC,MAAM,CAA1CD,GAA0C,CAAnB,CAAvBA;AAC1B;;AAED,SAAOD,KAAK,CAALA,IAAAA,CAAP,GAAOA,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAA,uBAAA,CAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAoD;AAClD,MAAIG,KAAK,KAAT,SAAA,EAAyB;;AACzB,MAAIA,KAAK,KAAT,IAAA,EAAoB;AAClBH,IAAAA,KAAK,CAALA,IAAAA,CAAWI,SAAS,CAApBJ,GAAoB,CAApBA;AACA;AACD;;AAED,MAAIK,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;AAAA,QAAA,SAAA,GAAA,0BAAA,CAAA,KAAA,CAAA;AAAA,QAAA,KAAA;;AAAA,QAAA;AACxB,WAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAuB;AAAA,YAAZC,CAAY,GAAA,KAAA,CAAA,KAAA;AACrBL,QAAAA,uBAAuB,CAAA,KAAA,EAAA,GAAA,EAAvBA,CAAuB,CAAvBA;AACD;AAHuB,KAAA,CAAA,OAAA,GAAA,EAAA;AAAA,MAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAAA,KAAA,SAAA;AAAA,MAAA,SAAA,CAAA,CAAA;AAAA;AAA1B,GAAA,MAIO,IAAIZ,QAAQ,CAAZ,KAAY,CAAZ,EAAqB;AAC1B,SAAK,IAAL,MAAA,IAAA,KAAA,EAA4B;AAC1B,UAAIE,MAAM,CAAA,KAAA,EAAV,MAAU,CAAV,EACEU,uBAAuB,CAAA,KAAA,EAAA,GAAA,MAAA,CAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,MAAA,EAAA,GAAA,CAAA,EAA6BE,KAAK,CAAzDF,MAAyD,CAAlC,CAAvBA;AACH;AAJI,GAAA,MAKA;AACLD,IAAAA,KAAK,CAALA,IAAAA,CAAWI,SAAS,CAATA,GAAS,CAATA,GAAAA,GAAAA,GAAuBG,kBAAkB,CAApDP,KAAoD,CAApDA;AACD;AACF;AAED;AACA;AACA;;;AAEAH,OAAO,CAAPA,eAAAA,GAAAA,SAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAA,WAAA,CAAA,OAAA,EAA8B;AAC5B,MAAMK,MAAM,GAAZ,EAAA;AACA,MAAMF,KAAK,GAAGQ,OAAO,CAAPA,KAAAA,CAAd,GAAcA,CAAd;AACA,MAAA,IAAA;AACA,MAAA,GAAA;;AAEA,OAAK,IAAIC,CAAC,GAAL,CAAA,EAAWC,OAAO,GAAGV,KAAK,CAA/B,MAAA,EAAwCS,CAAC,GAAzC,OAAA,EAAqD,EAArD,CAAA,EAA0D;AACxDE,IAAAA,IAAI,GAAGX,KAAK,CAAZW,CAAY,CAAZA;AACAC,IAAAA,GAAG,GAAGD,IAAI,CAAJA,OAAAA,CAANC,GAAMD,CAANC;;AACA,QAAIA,GAAG,KAAK,CAAZ,CAAA,EAAgB;AACdV,MAAAA,MAAM,CAACW,kBAAkB,CAAzBX,IAAyB,CAAnB,CAANA,GAAAA,EAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,MAAM,CAACW,kBAAkB,CAACF,IAAI,CAAJA,KAAAA,CAAAA,CAAAA,EAA1BT,GAA0BS,CAAD,CAAnB,CAANT,GAAiDW,kBAAkB,CACjEF,IAAI,CAAJA,KAAAA,CAAWC,GAAG,GADhBV,CACES,CADiE,CAAnET;AAGD;AACF;;AAED,SAAA,MAAA;AACD;AAED;AACA;AACA;;;AAEAL,OAAO,CAAPA,WAAAA,GAAAA,WAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,KAAAA,GAAgB;AACdiB,EAAAA,IAAI,EADU,WAAA;AAEdC,EAAAA,IAAI,EAFU,kBAAA;AAGdC,EAAAA,GAAG,EAHW,UAAA;AAIdC,EAAAA,UAAU,EAJI,mCAAA;AAKdC,EAAAA,IAAI,EALU,mCAAA;AAMd,eAAa;AANC,CAAhBrB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,SAAAA,GAAoB;AAClB,uCAAqCV,EAAE,CADrB,SAAA;AAElB,sBAAoBD;AAFF,CAApBW;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,KAAAA,GAAgB;AACd,uCADc,WAAA;AAEd,sBAAoBsB,IAAI,CAACC;AAFX,CAAhBvB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAA,WAAA,CAAA,OAAA,EAA8B;AAC5B,MAAMwB,KAAK,GAAGb,OAAO,CAAPA,KAAAA,CAAd,OAAcA,CAAd;AACA,MAAMc,MAAM,GAAZ,EAAA;AACA,MAAA,KAAA;AACA,MAAA,IAAA;AACA,MAAA,KAAA;AACA,MAAA,KAAA;;AAEA,OAAK,IAAIb,CAAC,GAAL,CAAA,EAAWC,OAAO,GAAGW,KAAK,CAA/B,MAAA,EAAwCZ,CAAC,GAAzC,OAAA,EAAqD,EAArD,CAAA,EAA0D;AACxDc,IAAAA,IAAI,GAAGF,KAAK,CAAZE,CAAY,CAAZA;AACAC,IAAAA,KAAK,GAAGD,IAAI,CAAJA,OAAAA,CAARC,GAAQD,CAARC;;AACA,QAAIA,KAAK,KAAK,CAAd,CAAA,EAAkB;AAChB;AACA;AACD;;AAEDC,IAAAA,KAAK,GAAGF,IAAI,CAAJA,KAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAARE,WAAQF,EAARE;AACAtB,IAAAA,KAAK,GAAGL,IAAI,CAACyB,IAAI,CAAJA,KAAAA,CAAWC,KAAK,GAA7BrB,CAAaoB,CAAD,CAAZpB;AACAmB,IAAAA,MAAM,CAANA,KAAM,CAANA,GAAAA,KAAAA;AACD;;AAED,SAAA,MAAA;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAA,MAAA,CAAA,IAAA,EAAsB;AACpB;AACA;AACA,SAAO,sBAAA,IAAA,CAAP,IAAO,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAA,QAAA,CAAA,QAAA,EAA4B;AAC1B,OAAA,GAAA,GAAA,QAAA;AACA,OAAA,GAAA,GAAW,KAAA,GAAA,CAFe,GAE1B,CAF0B,CAG1B;;AACA,OAAA,IAAA,GACG,KAAA,GAAA,CAAA,MAAA,KAAA,MAAA,KACE,KAAA,GAAA,CAAA,YAAA,KAAA,EAAA,IAAgC,KAAA,GAAA,CAAA,YAAA,KADnC,MAAC,KAED,OAAO,KAAA,GAAA,CAAP,YAAA,KAFA,WAAC,GAGG,KAAA,GAAA,CAHJ,YAAC,GADH,IAAA;AAMA,OAAA,UAAA,GAAkB,KAAA,GAAA,CAAA,GAAA,CAAlB,UAAA;AACA,MAAMI,MAAN,GAAiB,KAAjB,GAAiB,CAXS,MAW1B,CAX0B,CAY1B;;AACA,MAAIA,MAAM,KAAV,IAAA,EAAqB;AACnBA,IAAAA,MAAM,GAANA,GAAAA;AACD;;AAED,OAAA,oBAAA,CAAA,MAAA;;AACA,OAAA,OAAA,GAAeC,WAAW,CAAC,KAAA,GAAA,CAA3B,qBAA2B,EAAD,CAA1B;AACA,OAAA,MAAA,GAAc,KAnBY,OAmB1B,CAnB0B,CAoB1B;AACA;AACA;;AACA,OAAA,MAAA,CAAA,cAAA,IAA8B,KAAA,GAAA,CAAA,iBAAA,CAA9B,cAA8B,CAA9B;;AACA,OAAA,oBAAA,CAA0B,KAA1B,MAAA;;AAEA,MAAI,KAAA,IAAA,KAAA,IAAA,IAAsBC,QAAQ,CAAlC,aAAA,EAAkD;AAChD,SAAA,IAAA,GAAY,KAAA,GAAA,CAAZ,QAAA;AADF,GAAA,MAEO;AACL,SAAA,IAAA,GACE,KAAA,GAAA,CAAA,MAAA,KAAA,MAAA,GAAA,IAAA,GAEI,KAAA,UAAA,CAAgB,KAAA,IAAA,GAAY,KAAZ,IAAA,GAAwB,KAAA,GAAA,CAH9C,QAGM,CAHN;AAID;AACF;;AAEDtC,KAAK,CAACuC,QAAQ,CAAT,SAAA,EAAqBrC,YAAY,CAAtCF,SAAK,CAALA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAuC,QAAQ,CAARA,SAAAA,CAAAA,UAAAA,GAAgC,UAAA,OAAA,EAAmB;AACjD,MAAIT,KAAK,GAAGvB,OAAO,CAAPA,KAAAA,CAAc,KAA1B,IAAYA,CAAZ;;AACA,MAAI,KAAA,GAAA,CAAJ,OAAA,EAAsB;AACpB,WAAO,KAAA,GAAA,CAAA,OAAA,CAAA,IAAA,EAAP,OAAO,CAAP;AACD;;AAED,MAAI,CAAA,KAAA,IAAUiC,MAAM,CAAC,KAArB,IAAoB,CAApB,EAAiC;AAC/BV,IAAAA,KAAK,GAAGvB,OAAO,CAAPA,KAAAA,CAARuB,kBAAQvB,CAARuB;AACD;;AAED,SAAOA,KAAK,IAALA,OAAAA,KAAqBZ,OAAO,CAAPA,MAAAA,GAAAA,CAAAA,IAAsBA,OAAO,YAAlDY,MAAAA,IACHA,KAAK,CADFA,OACE,CADFA,GAAP,IAAA;AAVFS,CAAAA;AAeA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,QAAQ,CAARA,SAAAA,CAAAA,OAAAA,GAA6B,YAAY;AACvC,MAAQE,GAAR,GAAA,KAAA,GAAA;AACA,MAAQC,MAAR,GAAmBD,GAAnB,CAAA,MAAA;AACA,MAAQE,GAAR,GAAgBF,GAAhB,CAAA,GAAA;AAEA,MAAMG,OAAO,GAAA,UAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,GAAA,EAAA,IAAA,EAAA,MAAA,CAA+B,KAA/B,MAAA,EAAb,GAAa,CAAb;AACA,MAAMC,KAAK,GAAG,IAAA,KAAA,CAAd,OAAc,CAAd;AACAA,EAAAA,KAAK,CAALA,MAAAA,GAAe,KAAfA,MAAAA;AACAA,EAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AACAA,EAAAA,KAAK,CAALA,GAAAA,GAAAA,GAAAA;AAEA,SAAA,KAAA;AAXFN,CAAAA;AAcA;AACA;AACA;;;AAEAhC,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAA,OAAA,CAAA,MAAA,EAAA,GAAA,EAA8B;AAC5B,MAAMuC,IAAI,GAAV,IAAA;AACA,OAAA,MAAA,GAAc,KAAA,MAAA,IAAd,EAAA;AACA,OAAA,MAAA,GAAA,MAAA;AACA,OAAA,GAAA,GAAA,GAAA;AACA,OAAA,MAAA,GAL4B,EAK5B,CAL4B,CAKV;;AAClB,OAAA,OAAA,GAN4B,EAM5B,CAN4B,CAMT;;AACnB,OAAA,EAAA,CAAA,KAAA,EAAe,YAAM;AACnB,QAAID,KAAK,GAAT,IAAA;AACA,QAAIE,GAAG,GAAP,IAAA;;AAEA,QAAI;AACFA,MAAAA,GAAG,GAAG,IAAA,QAAA,CAANA,IAAM,CAANA;AADF,KAAA,CAEE,OAAA,GAAA,EAAY;AACZF,MAAAA,KAAK,GAAG,IAAA,KAAA,CAARA,wCAAQ,CAARA;AACAA,MAAAA,KAAK,CAALA,KAAAA,GAAAA,IAAAA;AACAA,MAAAA,KAAK,CAALA,QAAAA,GAHY,GAGZA,CAHY,CAIZ;;AACA,UAAIC,IAAI,CAAR,GAAA,EAAc;AACZ;AACAD,QAAAA,KAAK,CAALA,WAAAA,GACE,OAAOC,IAAI,CAAJA,GAAAA,CAAP,YAAA,KAAA,WAAA,GACIA,IAAI,CAAJA,GAAAA,CADJ,YAAA,GAEIA,IAAI,CAAJA,GAAAA,CALM,QAEZD,CAFY,CAMZ;;AACAA,QAAAA,KAAK,CAALA,MAAAA,GAAeC,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,GAAkBA,IAAI,CAAJA,GAAAA,CAAlBA,MAAAA,GAAfD,IAAAA;AACAA,QAAAA,KAAK,CAALA,UAAAA,GAAmBA,KAAK,CARZ,MAQZA,CARY,CAQqB;AARnC,OAAA,MASO;AACLA,QAAAA,KAAK,CAALA,WAAAA,GAAAA,IAAAA;AACAA,QAAAA,KAAK,CAALA,MAAAA,GAAAA,IAAAA;AACD;;AAED,aAAOC,IAAI,CAAJA,QAAAA,CAAP,KAAOA,CAAP;AACD;;AAEDA,IAAAA,IAAI,CAAJA,IAAAA,CAAAA,UAAAA,EAAAA,GAAAA;AAEA,QAAA,SAAA;;AACA,QAAI;AACF,UAAI,CAACA,IAAI,CAAJA,aAAAA,CAAL,GAAKA,CAAL,EAA8B;AAC5BE,QAAAA,SAAS,GAAG,IAAA,KAAA,CACVD,GAAG,CAAHA,UAAAA,IAAkBA,GAAG,CAArBA,IAAAA,IADFC,4BAAY,CAAZA;AAGD;AALH,KAAA,CAME,OAAA,GAAA,EAAY;AACZA,MAAAA,SAAS,GADG,GACZA,CADY,CACK;AAtCA,KAAA,CAyCnB;;;AACA,QAAA,SAAA,EAAe;AACbA,MAAAA,SAAS,CAATA,QAAAA,GAAAA,KAAAA;AACAA,MAAAA,SAAS,CAATA,QAAAA,GAAAA,GAAAA;AACAA,MAAAA,SAAS,CAATA,MAAAA,GAAmBD,GAAG,CAAtBC,MAAAA;AACAF,MAAAA,IAAI,CAAJA,QAAAA,CAAAA,SAAAA,EAAAA,GAAAA;AAJF,KAAA,MAKO;AACLA,MAAAA,IAAI,CAAJA,QAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AACD;AAjDH,GAAA;AAmDD;AAED;AACA;AACA;AAEA;;;AACApD,OAAO,CAACuD,OAAO,CAAfvD,SAAO,CAAPA;AAEAM,KAAK,CAACiD,OAAO,CAAR,SAAA,EAAoBnD,WAAW,CAApCE,SAAK,CAALA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAiD,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,UAAA,IAAA,EAAgB;AACvC,OAAA,GAAA,CAAA,cAAA,EAAyB1C,OAAO,CAAPA,KAAAA,CAAAA,IAAAA,KAAzB,IAAA;AACA,SAAA,IAAA;AAFF0C,CAAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2B,UAAA,IAAA,EAAgB;AACzC,OAAA,GAAA,CAAA,QAAA,EAAmB1C,OAAO,CAAPA,KAAAA,CAAAA,IAAAA,KAAnB,IAAA;AACA,SAAA,IAAA;AAFF0C,CAAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,UAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAA+B;AACtD,MAAI3C,SAAS,CAATA,MAAAA,KAAJ,CAAA,EAA4B4C,IAAI,GAAJA,EAAAA;;AAC5B,MAAI,OAAA,CAAA,IAAA,CAAA,KAAA,QAAA,IAA4BA,IAAI,KAApC,IAAA,EAA+C;AAC7C;AACAC,IAAAA,OAAO,GAAPA,IAAAA;AACAD,IAAAA,IAAI,GAAJA,EAAAA;AACD;;AAED,MAAI,CAAJ,OAAA,EAAc;AACZC,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAE,OAAA,IAAA,KAAA,UAAA,GAAA,OAAA,GAAuC;AADrC,KAAVD;AAGD;;AAED,MAAME,OAAO,GAAGF,OAAO,CAAPA,OAAAA,GACZA,OAAO,CADKA,OAAAA,GAEZ,UAAA,MAAA,EAAY;AACV,QAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9B,aAAOG,IAAI,CAAX,MAAW,CAAX;AACD;;AAED,UAAM,IAAA,KAAA,CAAN,+CAAM,CAAN;AAPN,GAAA;AAUA,SAAO,KAAA,KAAA,CAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAP,OAAO,CAAP;AAxBFL,CAAAA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0B,UAAA,KAAA,EAAiB;AACzC,MAAI,OAAA,KAAA,KAAJ,QAAA,EAA+BpC,KAAK,GAAG0C,SAAS,CAAjB1C,KAAiB,CAAjBA;AAC/B,MAAA,KAAA,EAAW,KAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACX,SAAA,IAAA;AAHFoC,CAAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2B,UAAA,KAAA,EAAA,IAAA,EAAA,OAAA,EAAgC;AACzD,MAAA,IAAA,EAAU;AACR,QAAI,KAAJ,KAAA,EAAgB;AACd,YAAM,IAAA,KAAA,CAAN,4CAAM,CAAN;AACD;;AAED,SAAA,YAAA,GAAA,MAAA,CAAA,KAAA,EAAA,IAAA,EAAwCE,OAAO,IAAIK,IAAI,CAAvD,IAAA;AACD;;AAED,SAAA,IAAA;AATFP,CAAAA;;AAYAA,OAAO,CAAPA,SAAAA,CAAAA,YAAAA,GAAiC,YAAY;AAC3C,MAAI,CAAC,KAAL,SAAA,EAAqB;AACnB,SAAA,SAAA,GAAiB,IAAIzD,IAAI,CAAzB,QAAiB,EAAjB;AACD;;AAED,SAAO,KAAP,SAAA;AALFyD,CAAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,QAAAA,GAA6B,UAAA,KAAA,EAAA,GAAA,EAAsB;AACjD,MAAI,KAAA,YAAA,CAAA,KAAA,EAAJ,GAAI,CAAJ,EAAmC;AACjC,WAAO,KAAP,MAAO,EAAP;AACD;;AAED,MAAMQ,EAAE,GAAG,KAAX,SAAA;AACA,OAAA,YAAA;;AAEA,MAAA,KAAA,EAAW;AACT,QAAI,KAAJ,WAAA,EAAsBZ,KAAK,CAALA,OAAAA,GAAgB,KAAA,QAAA,GAAhBA,CAAAA;AACtB,SAAA,IAAA,CAAA,OAAA,EAAA,KAAA;AACD;;AAEDY,EAAAA,EAAE,CAAA,KAAA,EAAFA,GAAE,CAAFA;AAbFR,CAAAA;AAgBA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,gBAAAA,GAAqC,YAAY;AAC/C,MAAMJ,KAAK,GAAG,IAAA,KAAA,CAAd,8JAAc,CAAd;AAGAA,EAAAA,KAAK,CAALA,WAAAA,GAAAA,IAAAA;AAEAA,EAAAA,KAAK,CAALA,MAAAA,GAAe,KAAfA,MAAAA;AACAA,EAAAA,KAAK,CAALA,MAAAA,GAAe,KAAfA,MAAAA;AACAA,EAAAA,KAAK,CAALA,GAAAA,GAAY,KAAZA,GAAAA;AAEA,OAAA,QAAA,CAAA,KAAA;AAVFI,CAAAA,C,CAaA;;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0B,YAAY;AACpCxD,EAAAA,OAAO,CAAPA,IAAAA,CAAAA,wDAAAA;AACA,SAAA,IAAA;AAFFwD,CAAAA;;AAKAA,OAAO,CAAPA,SAAAA,CAAAA,EAAAA,GAAuBA,OAAO,CAAPA,SAAAA,CAAvBA,KAAAA;AACAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2BA,OAAO,CAAPA,SAAAA,CAA3BA,EAAAA,C,CAEA;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0B,YAAM;AAC9B,QAAM,IAAA,KAAA,CAAN,6DAAM,CAAN;AADFA,CAAAA;;AAMAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyBA,OAAO,CAAPA,SAAAA,CAAzBA,KAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,UAAA,MAAA,EAAkB;AAC5C;AACA,SACErC,MAAM,IACN,OAAA,CAAA,MAAA,CAAA,KADAA,QAAAA,IAEA,CAACG,KAAK,CAALA,OAAAA,CAFDH,MAECG,CAFDH,IAGA8C,MAAM,CAANA,SAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,MAAAA,MAJF,iBAAA;AAFFT,CAAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,GAAwB,UAAA,EAAA,EAAc;AACpC,MAAI,KAAJ,UAAA,EAAqB;AACnBxD,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,uEAAAA;AAGD;;AAED,OAAA,UAAA,GAPoC,IAOpC,CAPoC,CASpC;;AACA,OAAA,SAAA,GAAiBgE,EAAE,IAViB,IAUpC,CAVoC,CAYpC;;AACA,OAAA,oBAAA;;AAEA,OAAA,IAAA;AAfFR,CAAAA;;AAkBAA,OAAO,CAAPA,SAAAA,CAAAA,iBAAAA,GAAsC,YAAY;AAChD,MAAMH,IAAI,GADsC,IAChD,CADgD,CAGhD;;AACA,MAAI,KAAA,cAAA,IAAuB,CAAC,KAA5B,mBAAA,EAAsD;AACpD,SAAA,mBAAA,GAA2Ba,UAAU,CAAC,YAAM;AAC1Cb,MAAAA,IAAI,CAAJA,aAAAA,CAAAA,oBAAAA,EAEEA,IAAI,CAFNA,cAAAA,EAAAA,WAAAA;AADmC,KAAA,EAMlC,KANH,cAAqC,CAArC;AAOD;AAZHG,CAAAA,C,CAeA;;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,YAAY;AACnC,MAAI,KAAJ,QAAA,EACE,OAAO,KAAA,QAAA,CACL,IAAA,KAAA,CADF,4DACE,CADK,CAAP;AAIF,MAAMH,IAAI,GAAV,IAAA;AACA,OAAA,GAAA,GAAWvC,OAAO,CAAlB,MAAWA,EAAX;AACA,MAAQqD,GAAR,GAAA,KAAA,GAAA;AACA,MAAIC,IAAI,GAAG,KAAA,SAAA,IAAkB,KAA7B,KAAA;;AAEA,OAXmC,YAWnC,GAXmC,CAanC;;;AACAD,EAAAA,GAAG,CAAHA,gBAAAA,CAAAA,kBAAAA,EAAyC,YAAM;AAC7C,QAAQE,UAAR,GAAuBF,GAAvB,CAAA,UAAA;;AACA,QAAIE,UAAU,IAAVA,CAAAA,IAAmBhB,IAAI,CAA3B,qBAAA,EAAmD;AACjDiB,MAAAA,YAAY,CAACjB,IAAI,CAAjBiB,qBAAY,CAAZA;AACD;;AAED,QAAID,UAAU,KAAd,CAAA,EAAsB;AACpB;AAP2C,KAAA,CAU7C;AACA;;;AACA,QAAA,MAAA;;AACA,QAAI;AACF1B,MAAAA,MAAM,GAAGwB,GAAG,CAAZxB,MAAAA;AADF,KAAA,CAEE,OAAA,QAAA,EAAM;AACNA,MAAAA,MAAM,GAANA,CAAAA;AACD;;AAED,QAAI,CAAJ,MAAA,EAAa;AACX,UAAIU,IAAI,CAAJA,QAAAA,IAAiBA,IAAI,CAAzB,QAAA,EAAoC;AACpC,aAAOA,IAAI,CAAX,gBAAOA,EAAP;AACD;;AAEDA,IAAAA,IAAI,CAAJA,IAAAA,CAAAA,KAAAA;AAtCiC,GAcnCc,EAdmC,CAyCnC;;AACA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAA,SAAA,EAAA,CAAA,EAAkB;AACvC,QAAIC,CAAC,CAADA,KAAAA,GAAJ,CAAA,EAAiB;AACfA,MAAAA,CAAC,CAADA,OAAAA,GAAaA,CAAC,CAADA,MAAAA,GAAWA,CAAC,CAAb,KAACA,GAAbA,GAAAA;;AAEA,UAAIA,CAAC,CAADA,OAAAA,KAAJ,GAAA,EAAuB;AACrBF,QAAAA,YAAY,CAACjB,IAAI,CAAjBiB,mBAAY,CAAZA;AACD;AACF;;AAEDE,IAAAA,CAAC,CAADA,SAAAA,GAAAA,SAAAA;AACAnB,IAAAA,IAAI,CAAJA,IAAAA,CAAAA,UAAAA,EAAAA,CAAAA;AAVF,GAAA;;AAaA,MAAI,KAAA,YAAA,CAAJ,UAAI,CAAJ,EAAmC;AACjC,QAAI;AACFc,MAAAA,GAAG,CAAHA,gBAAAA,CAAAA,UAAAA,EAAiCI,cAAc,CAAdA,IAAAA,CAAAA,IAAAA,EAAjCJ,UAAiCI,CAAjCJ;;AACA,UAAIA,GAAG,CAAP,MAAA,EAAgB;AACdA,QAAAA,GAAG,CAAHA,MAAAA,CAAAA,gBAAAA,CAAAA,UAAAA,EAEEI,cAAc,CAAdA,IAAAA,CAAAA,IAAAA,EAFFJ,QAEEI,CAFFJ;AAID;AAPH,KAAA,CAQE,OAAA,QAAA,EAAM,CACN;AACA;AACA;AACD;AACF;;AAED,MAAIA,GAAG,CAAP,MAAA,EAAgB;AACd,SAAA,iBAAA;AAxEiC,GAAA,CA2EnC;;;AACA,MAAI;AACF,QAAI,KAAA,QAAA,IAAiB,KAArB,QAAA,EAAoC;AAClCA,MAAAA,GAAG,CAAHA,IAAAA,CAAS,KAATA,MAAAA,EAAsB,KAAtBA,GAAAA,EAAAA,IAAAA,EAAsC,KAAtCA,QAAAA,EAAqD,KAArDA,QAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,GAAG,CAAHA,IAAAA,CAAS,KAATA,MAAAA,EAAsB,KAAtBA,GAAAA,EAAAA,IAAAA;AACD;AALH,GAAA,CAME,OAAA,GAAA,EAAY;AACZ;AACA,WAAO,KAAA,QAAA,CAAP,GAAO,CAAP;AApFiC,GAAA,CAuFnC;;;AACA,MAAI,KAAJ,gBAAA,EAA2BA,GAAG,CAAHA,eAAAA,GAxFQ,IAwFRA,CAxFQ,CA0FnC;;AACA,MACE,CAAC,KAAD,SAAA,IACA,KAAA,MAAA,KADA,KAAA,IAEA,KAAA,MAAA,KAFA,MAAA,IAGA,OAAA,IAAA,KAHA,QAAA,IAIA,CAAC,KAAA,OAAA,CALH,IAKG,CALH,EAME;AACA;AACA,QAAMM,WAAW,GAAG,KAAA,OAAA,CAApB,cAAoB,CAApB;;AACA,QAAIX,UAAS,GACX,KAAA,WAAA,IACAhD,OAAO,CAAPA,SAAAA,CAAkB2D,WAAW,GAAGA,WAAW,CAAXA,KAAAA,CAAAA,GAAAA,EAAH,CAAGA,CAAH,GAF/B,EAEE3D,CAFF;;AAGA,QAAI,CAAA,UAAA,IAAciC,MAAM,CAAxB,WAAwB,CAAxB,EAAuC;AACrCe,MAAAA,UAAS,GAAGhD,OAAO,CAAPA,SAAAA,CAAZgD,kBAAYhD,CAAZgD;AACD;;AAED,QAAA,UAAA,EAAeM,IAAI,GAAGN,UAAS,CAAhBM,IAAgB,CAAhBA;AA3GkB,GAAA,CA8GnC;;;AACA,OAAK,IAAL,KAAA,IAAoB,KAApB,MAAA,EAAiC;AAC/B,QAAI,KAAA,MAAA,CAAA,KAAA,MAAJ,IAAA,EAAiC;AAEjC,QAAI5D,MAAM,CAAC,KAAD,MAAA,EAAV,KAAU,CAAV,EACE2D,GAAG,CAAHA,gBAAAA,CAAAA,KAAAA,EAA4B,KAAA,MAAA,CAA5BA,KAA4B,CAA5BA;AACH;;AAED,MAAI,KAAJ,aAAA,EAAwB;AACtBA,IAAAA,GAAG,CAAHA,YAAAA,GAAmB,KAAnBA,aAAAA;AAvHiC,GAAA,CA0HnC;;;AACA,OAAA,IAAA,CAAA,SAAA,EA3HmC,IA2HnC,EA3HmC,CA6HnC;AACA;;AACAA,EAAAA,GAAG,CAAHA,IAAAA,CAAS,OAAA,IAAA,KAAA,WAAA,GAAA,IAAA,GAATA,IAAAA;AA/HFX,CAAAA;;AAkIA1C,OAAO,CAAPA,KAAAA,GAAgB,YAAA;AAAA,SAAM,IAAN,KAAM,EAAN;AAAhBA,CAAAA;;;AAEK,MAAMmC,MAAM,GAAA,IAAA,CAAZ,EAAY,CAAZ;;AACHvC,EAAAA,KAAK,CAALA,SAAAA,CAAgBuC,MAAM,CAAtBvC,WAAgBuC,EAAhBvC,IAAwC,UAAA,GAAA,EAAA,EAAA,EAAmB;AACzD,QAAMmC,QAAQ,GAAG,IAAI/B,OAAO,CAAX,OAAA,CAAA,MAAA,EAAjB,GAAiB,CAAjB;;AACA,SAAA,YAAA,CAAA,QAAA;;AACA,QAAA,EAAA,EAAQ;AACN+B,MAAAA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACD;;AAED,WAAA,QAAA;AAPFnC,GAAAA;;;AADF,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,IAAA,GAAqB,CAAA,KAAA,EAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EAArB,QAAqB,CAArB,EAAA,EAAA,GAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAA2E;AAAA,EAAA,KAAA;AAU1E;;AAEDA,KAAK,CAALA,SAAAA,CAAAA,GAAAA,GAAsBA,KAAK,CAALA,SAAAA,CAAtBA,MAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAI,OAAO,CAAPA,GAAAA,GAAc,UAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAmB;AAC/B,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,KAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,KAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AATF/B,CAAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,IAAAA,GAAe,UAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAmB;AAChC,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,MAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,KAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AATF/B,CAAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,OAAAA,GAAkB,UAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAmB;AACnC,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,SAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,IAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AATF/B,CAAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAA,GAAA,CAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAA4B;AAC1B,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,QAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,IAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AACD;;AAED/B,OAAO,CAAPA,GAAAA,GAAAA,GAAAA;AACAA,OAAO,CAAPA,MAAAA,GAAAA,GAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,KAAAA,GAAgB,UAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAmB;AACjC,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,OAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,IAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AATF/B,CAAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,IAAAA,GAAe,UAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAmB;AAChC,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,MAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,IAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AATF/B,CAAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,OAAO,CAAPA,GAAAA,GAAc,UAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAmB;AAC/B,MAAM+B,QAAQ,GAAG/B,OAAO,CAAA,KAAA,EAAxB,GAAwB,CAAxB;;AACA,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BkD,IAAAA,EAAE,GAAFA,IAAAA;AACAI,IAAAA,IAAI,GAAJA,IAAAA;AACD;;AAED,MAAA,IAAA,EAAUvB,QAAQ,CAARA,IAAAA,CAAAA,IAAAA;AACV,MAAA,EAAA,EAAQA,QAAQ,CAARA,GAAAA,CAAAA,EAAAA;AACR,SAAA,QAAA;AATF/B,CAAAA","sourcesContent":["/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn(\n    'Using browser-only version of superagent in non-browser environment'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst qs = require('qs');\nconst RequestBase = require('./request-base');\nconst { isObject, mixin, hasOwn } = require('./utils');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (\n    root.XMLHttpRequest &&\n    (!root.location ||\n      root.location.protocol !== 'file:' ||\n      !root.ActiveXObject)\n  ) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch {\n    /**/\n  }\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch {\n    /**/\n  }\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch {\n    /**/\n  }\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch {\n    /**/\n  }\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? (s) => s.trim() : (s) => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(object) {\n  if (!isObject(object)) return object;\n  const pairs = [];\n  for (const key in object) {\n    if (hasOwn(object, key)) pushEncodedKeyValuePair(pairs, key, object[key]);\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, value) {\n  if (value === undefined) return;\n  if (value === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    for (const v of value) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    }\n  } else if (isObject(value)) {\n    for (const subkey in value) {\n      if (hasOwn(value, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, value[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(value));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(string_) {\n  const object = {};\n  const pairs = string_.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, length_ = pairs.length; i < length_; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      object[decodeURIComponent(pair)] = '';\n    } else {\n      object[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return object;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(string_) {\n  const lines = string_.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let value;\n\n  for (let i = 0, length_ = lines.length; i < length_; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    value = trim(line.slice(index + 1));\n    fields[field] = value;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(request_) {\n  this.req = request_;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text =\n    (this.req.method !== 'HEAD' &&\n      (this.xhr.responseType === '' || this.xhr.responseType === 'text')) ||\n    typeof this.xhr.responseType === 'undefined'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && request_._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === 'HEAD'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\nmixin(Response.prototype, ResponseBase.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (string_) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, string_);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && string_ && (string_.length > 0 || string_ instanceof Object)\n    ? parse(string_)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const message = `cannot ${method} ${url} (${this.status})`;\n  const error = new Error(message);\n  error.status = this.status;\n  error.method = method;\n  error.url = url;\n\n  return error;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let error = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err) {\n      error = new Error('Parser is unable to parse the response');\n      error.parse = true;\n      error.original = err;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        error.rawResponse =\n          typeof self.xhr.responseType === 'undefined'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        error.status = self.xhr.status ? self.xhr.status : null;\n        error.statusCode = error.status; // backwards-compat only\n      } else {\n        error.rawResponse = null;\n        error.status = null;\n      }\n\n      return self.callback(error);\n    }\n\n    self.emit('response', res);\n\n    let new_error;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_error = new Error(\n          res.statusText || res.text || 'Unsuccessful HTTP response'\n        );\n      }\n    } catch (err) {\n      new_error = err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_error) {\n      new_error.original = error;\n      new_error.response = res;\n      new_error.status = res.status;\n      self.callback(new_error, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n\nmixin(Request.prototype, RequestBase.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = options.encoder\n    ? options.encoder\n    : (string) => {\n        if (typeof btoa === 'function') {\n          return btoa(string);\n        }\n\n        throw new Error('Cannot use basic auth, btoa is not a function');\n      };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (value) {\n  if (typeof value !== 'string') value = serialize(value);\n  if (value) this._query.push(value);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (error, res) {\n  if (this._shouldRetry(error, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (error) {\n    if (this._maxRetries) error.retries = this._retries - 1;\n    this.emit('error', error);\n  }\n\n  fn(error, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const error = new Error(\n    'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.'\n  );\n  error.crossDomain = true;\n\n  error.status = this.status;\n  error.method = this.method;\n  error.url = this.url;\n\n  this.callback(error);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    'Streaming is not supported in browser version of superagent'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (object) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    object &&\n    typeof object === 'object' &&\n    !Array.isArray(object) &&\n    Object.prototype.toString.call(object) !== '[object Object]'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\n      'Warning: .end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Upload timeout of ',\n        self._uploadTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.addEventListener('readystatechange', () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  });\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          'progress',\n          handleProgress.bind(null, 'upload')\n        );\n      }\n    } catch {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== 'GET' &&\n    this.method !== 'HEAD' &&\n    typeof data !== 'string' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (hasOwn(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\nfor (const method of ['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE']) {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const request_ = new request.Request(method, url);\n    this._setDefaults(request_);\n    if (fn) {\n      request_.end(fn);\n    }\n\n    return request_;\n  };\n}\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const request_ = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const request_ = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.query(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const request_ = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const request_ = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const request_ = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const request_ = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const request_ = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) request_.send(data);\n  if (fn) request_.end(fn);\n  return request_;\n};\n"]},"metadata":{},"sourceType":"script"}