{"ast":null,"code":"import phanhoiApi from \"../../../../api/phanhoiApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const phanhoiData = createAsyncThunk('phanhois/phanhoiData', async () => {\n  const phanhoi = await phanhoiApi.getAll();\n  return phanhoi;\n});\nconst Phanhoi = createSlice({\n  name: \"phanhois\",\n  initialState: {\n    hoadon: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    addhoadon: (state, action) => {\n      phanhoiApi.posthoadon(action.payload);\n    },\n    removehoadon: (state, action) => {\n      phanhoiApi.deletehoadon(action.payload);\n    },\n    updatehoadon: (state, action) => {\n      phanhoiApi.edithoadon(action.payload);\n    }\n  },\n  extraReducers: {\n    [phanhoiData.pending]: state => {\n      state.loading = true;\n    },\n    [phanhoiData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [phanhoiData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.hoadon = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Phanhoi;\nexport const {\n  addhoadon,\n  removehoadon,\n  updatehoadon\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Bin Tran/Desktop/BUAG/BUAG/frontend/src/features/container/admin/Phanhoi/phanhoiSlice.js"],"names":["phanhoiApi","createSlice","createAsyncThunk","require","phanhoiData","phanhoi","getAll","Phanhoi","name","initialState","hoadon","loading","error","reducers","addhoadon","state","action","posthoadon","payload","removehoadon","deletehoadon","updatehoadon","edithoadon","extraReducers","pending","rejected","fulfilled","reducer","actions"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4BAAvB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,sBAAD,EAAyB,YAAY;AAC5E,QAAMG,OAAO,GAAG,MAAML,UAAU,CAACM,MAAX,EAAtB;AACA,SAAOD,OAAP;AACH,CAH0C,CAApC;AAIP,MAAME,OAAO,GAAGN,WAAW,CAAC;AACxBO,EAAAA,IAAI,EAAE,UADkB;AAExBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFU;AAOxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BhB,MAAAA,UAAU,CAACiB,UAAX,CAAsBD,MAAM,CAACE,OAA7B;AACH,KAHK;AAINC,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7BhB,MAAAA,UAAU,CAACoB,YAAX,CAAwBJ,MAAM,CAACE,OAA/B;AACH,KANK;AAONG,IAAAA,YAAY,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7BhB,MAAAA,UAAU,CAACsB,UAAX,CAAsBN,MAAM,CAACE,OAA7B;AACH;AATK,GAPc;AAkBxBK,EAAAA,aAAa,EAAE;AACX,KAACnB,WAAW,CAACoB,OAAb,GAAwBT,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACP,WAAW,CAACqB,QAAb,GAAwB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACR,WAAW,CAACsB,SAAb,GAAyB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACE,OAAtB;AACH;AAXU;AAlBS,CAAD,CAA3B;AAgCA,MAAM;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBrB,OAA7B;AACA,OAAO,MAAM;AAAEO,EAAAA,SAAF;AAAaK,EAAAA,YAAb;AAA2BE,EAAAA;AAA3B,IAA4CO,OAAlD;AAEP,eAAeD,OAAf","sourcesContent":["import phanhoiApi from \"../../../../api/phanhoiApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const phanhoiData = createAsyncThunk('phanhois/phanhoiData', async () => {\r\n    const phanhoi = await phanhoiApi.getAll();\r\n    return phanhoi;\r\n})\r\nconst Phanhoi = createSlice({\r\n    name: \"phanhois\",\r\n    initialState: {\r\n        hoadon: [],\r\n        loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        addhoadon: (state, action) => {\r\n            phanhoiApi.posthoadon(action.payload);\r\n        },\r\n        removehoadon: (state, action) => {\r\n            phanhoiApi.deletehoadon(action.payload);\r\n        },\r\n        updatehoadon: (state, action) => {\r\n            phanhoiApi.edithoadon(action.payload);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [phanhoiData.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [phanhoiData.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [phanhoiData.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.hoadon = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Phanhoi;\r\nexport const { addhoadon, removehoadon, updatehoadon } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}