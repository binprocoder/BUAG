{"ast":null,"code":"import phanhoiApi from \"../../../../api/phanhoiApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const phanhoiData = createAsyncThunk('phanhoiss/phanhoiData', async () => {\n  const phanhoi = await phanhoiApi.getAll();\n  return phanhoi;\n});\nconst Phanhoi = createSlice({\n  name: \"phanhois\",\n  initialState: {\n    phanhoi: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    updatephanhoi: (state, action) => {\n      phanhoiApi.editresponsecomment(action.payload);\n    }\n  },\n  extraReducers: {\n    [phanhoiData.pending]: state => {\n      state.loading = true;\n    },\n    [phanhoiData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [phanhoiData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.hoadon = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Phanhoi;\nexport const {\n  updatephanhoi\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Bin Tran/Desktop/BUAG/BUAG/frontend/src/features/container/admin/Phanhoi/phanhoiSlice.js"],"names":["phanhoiApi","createSlice","createAsyncThunk","require","phanhoiData","phanhoi","getAll","Phanhoi","name","initialState","loading","error","reducers","updatephanhoi","state","action","editresponsecomment","payload","extraReducers","pending","rejected","fulfilled","hoadon","reducer","actions"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4BAAvB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,uBAAD,EAA0B,YAAY;AAC7E,QAAMG,OAAO,GAAG,MAAML,UAAU,CAACM,MAAX,EAAtB;AACA,SAAOD,OAAP;AACH,CAH0C,CAApC;AAIP,MAAME,OAAO,GAAGN,WAAW,CAAC;AACxBO,EAAAA,IAAI,EAAE,UADkB;AAExBC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,OAAO,EAAE,EADC;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFU;AAOxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9Bf,MAAAA,UAAU,CAACgB,mBAAX,CAA+BD,MAAM,CAACE,OAAtC;AACH;AAHK,GAPc;AAYxBC,EAAAA,aAAa,EAAE;AACX,KAACd,WAAW,CAACe,OAAb,GAAwBL,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,WAAW,CAACgB,QAAb,GAAwB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,WAAW,CAACiB,SAAb,GAAyB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACQ,MAAN,GAAeP,MAAM,CAACE,OAAtB;AACH;AAXU;AAZS,CAAD,CAA3B;AA0BA,MAAM;AAAEM,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,OAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA;AAAF,IAAoBW,OAA1B;AAEP,eAAeD,OAAf","sourcesContent":["import phanhoiApi from \"../../../../api/phanhoiApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const phanhoiData = createAsyncThunk('phanhoiss/phanhoiData', async () => {\r\n    const phanhoi = await phanhoiApi.getAll();\r\n    return phanhoi;\r\n})\r\nconst Phanhoi = createSlice({\r\n    name: \"phanhois\",\r\n    initialState: {\r\n        phanhoi: [],\r\n        loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        updatephanhoi: (state, action) => {\r\n            phanhoiApi.editresponsecomment(action.payload);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [phanhoiData.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [phanhoiData.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [phanhoiData.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.hoadon = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Phanhoi;\r\nexport const { updatephanhoi } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}