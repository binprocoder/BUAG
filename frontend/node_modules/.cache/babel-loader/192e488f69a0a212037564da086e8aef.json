{"ast":null,"code":"import userApi from \"../api/userApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const getMe = createAsyncThunk('user/getMe', async (params, thunkAPI) => {\n  const currentUser = await userApi.getMe();\n  return currentUser;\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    curent: {},\n    loading: false,\n    error: ''\n  },\n  reducers: {},\n  extraReducers: {\n    [getMe.pending]: state => {\n      state.loading = true;\n    },\n    [getMe.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error;\n    },\n    [getMe.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.curent = action.payload;\n    }\n  }\n});\nconst {\n  reducer: userReducer\n} = userSlice;\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/New folder/BUAG/frontend/src/app/userSlice.js"],"names":["userApi","createSlice","createAsyncThunk","require","getMe","params","thunkAPI","currentUser","userSlice","name","initialState","curent","loading","error","reducers","extraReducers","pending","state","rejected","action","fulfilled","payload","reducer","userReducer"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;;AACA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAD,EAAe,OAAOG,MAAP,EAAeC,QAAf,KAA4B;AAC5E,QAAMC,WAAW,GAAG,MAAMP,OAAO,CAACI,KAAR,EAA1B;AACA,SAAOG,WAAP;AACH,CAHoC,CAA9B;AAKP,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFY;AAO1BC,EAAAA,QAAQ,EAAE,EAPgB;AAQ1BC,EAAAA,aAAa,EAAE;AACX,KAACX,KAAK,CAACY,OAAP,GAAkBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACR,KAAK,CAACc,QAAP,GAAkB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACjCF,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAcM,MAAM,CAACN,KAArB;AACH,KAPU;AAQX,KAACT,KAAK,CAACgB,SAAP,GAAmB,CAACH,KAAD,EAAQE,MAAR,KAAmB;AAClCF,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACN,MAAN,GAAeQ,MAAM,CAACE,OAAtB;AACH;AAXU;AARW,CAAD,CAA7B;AAuBA,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAA2Bf,SAAjC;AACA,eAAee,WAAf","sourcesContent":["import userApi from \"../api/userApi\"\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const getMe = createAsyncThunk('user/getMe', async (params, thunkAPI) => {\r\n    const currentUser = await userApi.getMe();\r\n    return currentUser;\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        curent: {},\r\n        loading: false,\r\n        error: ''\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getMe.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [getMe.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.error;\r\n        },\r\n        [getMe.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.curent = action.payload;\r\n        }\r\n\r\n    }\r\n});\r\nconst { reducer: userReducer } = userSlice;\r\nexport default userReducer"]},"metadata":{},"sourceType":"module"}