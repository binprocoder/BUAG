{"ast":null,"code":"import dichvuApi from \"../../../../api/dichvuApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const dichvuData = createAsyncThunk('dichvus/dichvuData', async () => {\n  const dichvu = await dichvuApi.getAll();\n  return dichvu;\n});\nconst Dichvu = createSlice({\n  name: \"dichvus\",\n  initialState: {\n    dichvu: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    adddichvu: (state, action) => {\n      dichvuApi.postdichvu(action.payload);\n    },\n    removedichvu: (state, action) => {\n      dichvuApi.deletedichvu(action.payload);\n    },\n    updatedichvu: (state, action) => {\n      dichvuApi.editdichvu(action.payload);\n    }\n  },\n  extraReducers: {\n    [dichvuData.pending]: state => {\n      state.loading = true;\n    },\n    [dichvuData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [dichvuData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.dichvu = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Dichvu;\nexport const {\n  adddichvu,\n  removedichvu,\n  updatedichvu\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/BUAG-tienPush/frontend/src/features/container/admin/Dichvu/dichvuSlice.js"],"names":["dichvuApi","createSlice","createAsyncThunk","require","dichvuData","dichvu","getAll","Dichvu","name","initialState","loading","error","reducers","adddichvu","state","action","postdichvu","payload","removedichvu","deletedichvu","updatedichvu","editdichvu","extraReducers","pending","rejected","fulfilled","reducer","actions"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,2BAAtB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,oBAAD,EAAuB,YAAY;AACzE,QAAMG,MAAM,GAAG,MAAML,SAAS,CAACM,MAAV,EAArB;AACA,SAAOD,MAAP;AACH,CAHyC,CAAnC;AAIP,MAAME,MAAM,GAAGN,WAAW,CAAC;AACvBO,EAAAA,IAAI,EAAE,SADiB;AAEvBC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,MAAM,EAAE,EADE;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFS;AAOvBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1Bf,MAAAA,SAAS,CAACgB,UAAV,CAAqBD,MAAM,CAACE,OAA5B;AACH,KAHK;AAINC,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7Bf,MAAAA,SAAS,CAACmB,YAAV,CAAuBJ,MAAM,CAACE,OAA9B;AACH,KANK;AAONG,IAAAA,YAAY,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7Bf,MAAAA,SAAS,CAACqB,UAAV,CAAqBN,MAAM,CAACE,OAA5B;AACH;AATK,GAPa;AAkBvBK,EAAAA,aAAa,EAAE;AACX,KAAClB,UAAU,CAACmB,OAAZ,GAAuBT,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,UAAU,CAACoB,QAAZ,GAAuB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,UAAU,CAACqB,SAAZ,GAAwB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACE,OAAtB;AACH;AAXU;AAlBQ,CAAD,CAA1B;AAgCA,MAAM;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBpB,MAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA,SAAF;AAAaK,EAAAA,YAAb;AAA2BE,EAAAA;AAA3B,IAA4CO,OAAlD;AAEP,eAAeD,OAAf","sourcesContent":["import dichvuApi from \"../../../../api/dichvuApi\";\n\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\n\nexport const dichvuData = createAsyncThunk('dichvus/dichvuData', async () => {\n    const dichvu = await dichvuApi.getAll();\n    return dichvu;\n})\nconst Dichvu = createSlice({\n    name: \"dichvus\",\n    initialState: {\n        dichvu: [],\n        loading: true,\n        error: ''\n    },\n    reducers: {\n        adddichvu: (state, action) => {\n            dichvuApi.postdichvu(action.payload);\n        },\n        removedichvu: (state, action) => {\n            dichvuApi.deletedichvu(action.payload);\n        },\n        updatedichvu: (state, action) => {\n            dichvuApi.editdichvu(action.payload);\n        }\n    },\n    extraReducers: {\n        [dichvuData.pending]: (state) => {\n            state.loading = true;\n        },\n        [dichvuData.rejected]: (state, action) => {\n            state.loading = true;\n            state.error = action.error;\n        },\n        [dichvuData.fulfilled]: (state, action) => {\n            state.loading = false;\n            state.dichvu = action.payload;\n        }\n    }\n});\nconst { reducer, actions } = Dichvu;\nexport const { adddichvu, removedichvu, updatedichvu } = actions;\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}