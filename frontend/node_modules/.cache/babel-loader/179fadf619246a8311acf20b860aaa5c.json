{"ast":null,"code":"'use strict';\n\nconst {\n  VMError\n} = require('./bridge');\n\nlet cacheCoffeeScriptCompiler;\n/**\n * Returns the cached coffee script compiler or loads it\n * if it is not found in the cache.\n *\n * @private\n * @return {compileCallback} The coffee script compiler.\n * @throws {VMError} If the coffee-script module can't be found.\n */\n\nfunction getCoffeeScriptCompiler() {\n  if (!cacheCoffeeScriptCompiler) {\n    try {\n      // The warning generated by webpack can be disabled by setting:\n      // ignoreWarnings[].message = /Can't resolve 'coffee-script'/\n\n      /* eslint-disable-next-line global-require */\n      const coffeeScript = require('coffee-script');\n\n      cacheCoffeeScriptCompiler = (code, filename) => {\n        return coffeeScript.compile(code, {\n          header: false,\n          bare: true\n        });\n      };\n    } catch (e) {\n      throw new VMError('Coffee-Script compiler is not installed.');\n    }\n  }\n\n  return cacheCoffeeScriptCompiler;\n}\n/**\n * Remove the shebang from source code.\n *\n * @private\n * @param {string} code - Code from which to remove the shebang.\n * @return {string} code without the shebang.\n */\n\n\nfunction removeShebang(code) {\n  if (!code.startsWith('#!')) return code;\n  return '//' + code.substring(2);\n}\n/**\n * The JavaScript compiler, just a identity function.\n *\n * @private\n * @type {compileCallback}\n * @param {string} code - The JavaScript code.\n * @param {string} filename - Filename of this script.\n * @return {string} The code.\n */\n\n\nfunction jsCompiler(code, filename) {\n  return removeShebang(code);\n}\n/**\n * Look up the compiler for a specific name.\n *\n * @private\n * @param {(string|compileCallback)} compiler - A compile callback or the name of the compiler.\n * @return {compileCallback} The resolved compiler.\n * @throws {VMError} If the compiler is unknown or the coffee script module was needed and couldn't be found.\n */\n\n\nfunction lookupCompiler(compiler) {\n  if ('function' === typeof compiler) return compiler;\n\n  switch (compiler) {\n    case 'coffeescript':\n    case 'coffee-script':\n    case 'cs':\n    case 'text/coffeescript':\n      return getCoffeeScriptCompiler();\n\n    case 'javascript':\n    case 'java-script':\n    case 'js':\n    case 'text/javascript':\n      return jsCompiler;\n\n    default:\n      throw new VMError(`Unsupported compiler '${compiler}'.`);\n  }\n}\n\nexports.removeShebang = removeShebang;\nexports.lookupCompiler = lookupCompiler;","map":{"version":3,"sources":["C:/Users/Bin Tran/Desktop/BUAG/BUAG/frontend/node_modules/vm2/lib/compiler.js"],"names":["VMError","require","cacheCoffeeScriptCompiler","getCoffeeScriptCompiler","coffeeScript","code","filename","compile","header","bare","e","removeShebang","startsWith","substring","jsCompiler","lookupCompiler","compiler","exports"],"mappings":"AAAA;;AAEA,MAAM;AACLA,EAAAA;AADK,IAEFC,OAAO,CAAC,UAAD,CAFX;;AAIA,IAAIC,yBAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,uBAAT,GAAmC;AAClC,MAAI,CAACD,yBAAL,EAAgC;AAC/B,QAAI;AACH;AACA;;AACA;AACA,YAAME,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA5B;;AACAC,MAAAA,yBAAyB,GAAG,CAACG,IAAD,EAAOC,QAAP,KAAoB;AAC/C,eAAOF,YAAY,CAACG,OAAb,CAAqBF,IAArB,EAA2B;AAACG,UAAAA,MAAM,EAAE,KAAT;AAAgBC,UAAAA,IAAI,EAAE;AAAtB,SAA3B,CAAP;AACA,OAFD;AAGA,KARD,CAQE,OAAOC,CAAP,EAAU;AACX,YAAM,IAAIV,OAAJ,CAAY,0CAAZ,CAAN;AACA;AACD;;AACD,SAAOE,yBAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,aAAT,CAAuBN,IAAvB,EAA6B;AAC5B,MAAI,CAACA,IAAI,CAACO,UAAL,CAAgB,IAAhB,CAAL,EAA4B,OAAOP,IAAP;AAC5B,SAAO,OAAOA,IAAI,CAACQ,SAAL,CAAe,CAAf,CAAd;AACA;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAoBT,IAApB,EAA0BC,QAA1B,EAAoC;AACnC,SAAOK,aAAa,CAACN,IAAD,CAApB;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASU,cAAT,CAAwBC,QAAxB,EAAkC;AACjC,MAAI,eAAe,OAAOA,QAA1B,EAAoC,OAAOA,QAAP;;AACpC,UAAQA,QAAR;AACC,SAAK,cAAL;AACA,SAAK,eAAL;AACA,SAAK,IAAL;AACA,SAAK,mBAAL;AACC,aAAOb,uBAAuB,EAA9B;;AACD,SAAK,YAAL;AACA,SAAK,aAAL;AACA,SAAK,IAAL;AACA,SAAK,iBAAL;AACC,aAAOW,UAAP;;AACD;AACC,YAAM,IAAId,OAAJ,CAAa,yBAAwBgB,QAAS,IAA9C,CAAN;AAZF;AAcA;;AAEDC,OAAO,CAACN,aAAR,GAAwBA,aAAxB;AACAM,OAAO,CAACF,cAAR,GAAyBA,cAAzB","sourcesContent":["'use strict';\n\nconst {\n\tVMError\n} = require('./bridge');\n\nlet cacheCoffeeScriptCompiler;\n\n/**\n * Returns the cached coffee script compiler or loads it\n * if it is not found in the cache.\n *\n * @private\n * @return {compileCallback} The coffee script compiler.\n * @throws {VMError} If the coffee-script module can't be found.\n */\nfunction getCoffeeScriptCompiler() {\n\tif (!cacheCoffeeScriptCompiler) {\n\t\ttry {\n\t\t\t// The warning generated by webpack can be disabled by setting:\n\t\t\t// ignoreWarnings[].message = /Can't resolve 'coffee-script'/\n\t\t\t/* eslint-disable-next-line global-require */\n\t\t\tconst coffeeScript = require('coffee-script');\n\t\t\tcacheCoffeeScriptCompiler = (code, filename) => {\n\t\t\t\treturn coffeeScript.compile(code, {header: false, bare: true});\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow new VMError('Coffee-Script compiler is not installed.');\n\t\t}\n\t}\n\treturn cacheCoffeeScriptCompiler;\n}\n\n/**\n * Remove the shebang from source code.\n *\n * @private\n * @param {string} code - Code from which to remove the shebang.\n * @return {string} code without the shebang.\n */\nfunction removeShebang(code) {\n\tif (!code.startsWith('#!')) return code;\n\treturn '//' + code.substring(2);\n}\n\n\n/**\n * The JavaScript compiler, just a identity function.\n *\n * @private\n * @type {compileCallback}\n * @param {string} code - The JavaScript code.\n * @param {string} filename - Filename of this script.\n * @return {string} The code.\n */\nfunction jsCompiler(code, filename) {\n\treturn removeShebang(code);\n}\n\n/**\n * Look up the compiler for a specific name.\n *\n * @private\n * @param {(string|compileCallback)} compiler - A compile callback or the name of the compiler.\n * @return {compileCallback} The resolved compiler.\n * @throws {VMError} If the compiler is unknown or the coffee script module was needed and couldn't be found.\n */\nfunction lookupCompiler(compiler) {\n\tif ('function' === typeof compiler) return compiler;\n\tswitch (compiler) {\n\t\tcase 'coffeescript':\n\t\tcase 'coffee-script':\n\t\tcase 'cs':\n\t\tcase 'text/coffeescript':\n\t\t\treturn getCoffeeScriptCompiler();\n\t\tcase 'javascript':\n\t\tcase 'java-script':\n\t\tcase 'js':\n\t\tcase 'text/javascript':\n\t\t\treturn jsCompiler;\n\t\tdefault:\n\t\t\tthrow new VMError(`Unsupported compiler '${compiler}'.`);\n\t}\n}\n\nexports.removeShebang = removeShebang;\nexports.lookupCompiler = lookupCompiler;\n"]},"metadata":{},"sourceType":"script"}