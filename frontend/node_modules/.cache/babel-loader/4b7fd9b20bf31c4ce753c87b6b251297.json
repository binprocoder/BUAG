{"ast":null,"code":"import tagApi from \"../../../../api/tagApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const tagData = createAsyncThunk('tags/tagData', async () => {\n  const tag = await tagApi.getAll();\n  return tag;\n});\nconst Tag = createSlice({\n  name: \"tags\",\n  initialState: {\n    tag: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    addtag: (state, action) => {\n      tagApi.posttag(action.payload);\n    },\n    removetag: (state, action) => {\n      tagApi.deletetag(action.payload);\n    },\n    updatetag: (state, action) => {\n      tagApi.edittag(action.payload);\n    }\n  },\n  extraReducers: {\n    [tagData.pending]: state => {\n      state.loading = true;\n    },\n    [tagData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [tagData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.tag = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Tag;\nexport const {\n  addtag,\n  removetag,\n  updatetag\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/BUAG/frontend/src/features/container/admin/Tag/tagSlice.js"],"names":["tagApi","createSlice","createAsyncThunk","require","tagData","tag","getAll","Tag","name","initialState","loading","error","reducers","addtag","state","action","posttag","payload","removetag","deletetag","updatetag","edittag","extraReducers","pending","rejected","fulfilled","reducer","actions"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,wBAAnB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,OAAO,GAAGF,gBAAgB,CAAC,cAAD,EAAiB,YAAY;AAChE,QAAMG,GAAG,GAAG,MAAML,MAAM,CAACM,MAAP,EAAlB;AACA,SAAOD,GAAP;AACH,CAHsC,CAAhC;AAIP,MAAME,GAAG,GAAGN,WAAW,CAAC;AACpBO,EAAAA,IAAI,EAAE,MADc;AAEpBC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,GAAG,EAAE,EADK;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFM;AAOpBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvBf,MAAAA,MAAM,CAACgB,OAAP,CAAeD,MAAM,CAACE,OAAtB;AACH,KAHK;AAINC,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1Bf,MAAAA,MAAM,CAACmB,SAAP,CAAiBJ,MAAM,CAACE,OAAxB;AACH,KANK;AAONG,IAAAA,SAAS,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC1Bf,MAAAA,MAAM,CAACqB,OAAP,CAAeN,MAAM,CAACE,OAAtB;AACH;AATK,GAPU;AAkBpBK,EAAAA,aAAa,EAAE;AACX,KAAClB,OAAO,CAACmB,OAAT,GAAoBT,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,OAAO,CAACoB,QAAT,GAAoB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,OAAO,CAACqB,SAAT,GAAqB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACT,GAAN,GAAYU,MAAM,CAACE,OAAnB;AACH;AAXU;AAlBK,CAAD,CAAvB;AAgCA,MAAM;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBpB,GAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA,MAAF;AAAUK,EAAAA,SAAV;AAAqBE,EAAAA;AAArB,IAAmCO,OAAzC;AAEP,eAAeD,OAAf","sourcesContent":["import tagApi from \"../../../../api/tagApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const tagData = createAsyncThunk('tags/tagData', async () => {\r\n    const tag = await tagApi.getAll();\r\n    return tag;\r\n})\r\nconst Tag = createSlice({\r\n    name: \"tags\",\r\n    initialState: {\r\n        tag: [],\r\n        loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        addtag: (state, action) => {\r\n            tagApi.posttag(action.payload);\r\n        },\r\n        removetag: (state, action) => {\r\n            tagApi.deletetag(action.payload);\r\n        },\r\n        updatetag: (state, action) => {\r\n            tagApi.edittag(action.payload);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [tagData.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [tagData.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [tagData.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.tag = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Tag;\r\nexport const { addtag, removetag, updatetag } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}