{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Operation_1 = require(\"./Operation\");\n\nvar Path_1 = require(\"../util/Path\");\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = Operation_1.OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path_1.Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n\nexports.Overwrite = Overwrite;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;AAgBA;;AACA;AAGA;;;;;;;;;AAOA;AAAA;AAAA;AAIE,qBACSA,MADT,EAESC,IAFT,EAGSC,IAHT,EAGmB;AAFV;AACA;AACA;AANT;;AACA,gBAAOC,0BAAcC,SAArB;AAMI;;AAEJC,oDAAkBC,SAAlB,EAAmC;AACjC,QAAI,KAAKL,IAAL,CAAUM,OAAV,EAAJ,EAAyB;AACvB,aAAO,IAAIF,SAAJ,CACL,KAAKL,MADA,EAELQ,YAAKC,KAFA,EAGL,KAAKP,IAAL,CAAUQ,iBAAV,CAA4BJ,SAA5B,CAHK,CAAP;AAKD,KAND,MAMO;AACL,aAAO,IAAID,SAAJ,CAAc,KAAKL,MAAnB,EAA2B,KAAKC,IAAL,CAAUU,QAAV,EAA3B,EAAiD,KAAKT,IAAtD,CAAP;AACD;AACF,GAVD;;AAWF;AArBA;;AAAaU","names":["source","path","snap","Operation_1","OVERWRITE","Overwrite","childName","isEmpty","Path_1","Empty","getImmediateChild","popFront","exports"],"sources":["../src/core/operation/Overwrite.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Path } from '../util/Path';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (this.path.isEmpty()) {\n      return new Overwrite(\n        this.source,\n        Path.Empty,\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}