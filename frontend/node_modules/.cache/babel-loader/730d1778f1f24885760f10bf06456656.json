{"ast":null,"code":"import tintucApi from \"../../../../api/tintucApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const tintucData = createAsyncThunk('tintucs/tintucData', async () => {\n  const tintuc = await tintucApi.getAll();\n  return tintuc;\n});\nconst Tintuc = createSlice({\n  name: \"tintucs\",\n  initialState: {\n    tintuc: [],\n    Loading: true,\n    error: ''\n  },\n  reducers: {\n    addtintuc: (state, action) => {\n      tintucApi.posttintuc(action.payload);\n    },\n    removetintuc: (state, action) => {\n      tintucApi.deletetintuc(action.payload);\n    },\n    updatetintuc: (state, action) => {\n      tintucApi.edittintuc(action.payload);\n    }\n  },\n  extraReducers: {\n    [tintucData.pending]: state => {\n      state.Loading = true;\n    },\n    [tintucData.rejected]: (state, action) => {\n      state.Loading = true;\n      state.error = action.error;\n    },\n    [tintucData.fulfilled]: (state, action) => {\n      state.Loading = false;\n      state.tintuc = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Tintuc;\nexport const {\n  addtintuc,\n  removetintuc,\n  updatetintuc\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Trang Tran/Desktop/Project M/buag/frontend/src/features/container/admin/tintuc/tintucSlice.js"],"names":["tintucApi","createSlice","createAsyncThunk","require","tintucData","tintuc","getAll","Tintuc","name","initialState","Loading","error","reducers","addtintuc","state","action","posttintuc","payload","removetintuc","deletetintuc","updatetintuc","edittintuc","extraReducers","pending","rejected","fulfilled","reducer","actions"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,2BAAtB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,oBAAD,EAAuB,YAAY;AACzE,QAAMG,MAAM,GAAG,MAAML,SAAS,CAACM,MAAV,EAArB;AACA,SAAOD,MAAP;AACH,CAHyC,CAAnC;AAIP,MAAME,MAAM,GAAGN,WAAW,CAAC;AACvBO,EAAAA,IAAI,EAAE,SADiB;AAEvBC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,MAAM,EAAE,EADE;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFS;AAOvBC,EAAAA,QAAQ,EAAE;AAENC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1Bf,MAAAA,SAAS,CAACgB,UAAV,CAAqBD,MAAM,CAACE,OAA5B;AACH,KAJK;AAKNC,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7Bf,MAAAA,SAAS,CAACmB,YAAV,CAAuBJ,MAAM,CAACE,OAA9B;AACH,KAPK;AAQNG,IAAAA,YAAY,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7Bf,MAAAA,SAAS,CAACqB,UAAV,CAAqBN,MAAM,CAACE,OAA5B;AACH;AAVK,GAPa;AAmBvBK,EAAAA,aAAa,EAAE;AACX,KAAClB,UAAU,CAACmB,OAAZ,GAAuBT,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,UAAU,CAACoB,QAAZ,GAAuB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,UAAU,CAACqB,SAAZ,GAAwB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACE,OAAtB;AACH;AAXU;AAnBQ,CAAD,CAA1B;AAiCA,MAAM;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBpB,MAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA,SAAF;AAAaK,EAAAA,YAAb;AAA2BE,EAAAA;AAA3B,IAA4CO,OAAlD;AAEP,eAAeD,OAAf","sourcesContent":["import tintucApi from \"../../../../api/tintucApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const tintucData = createAsyncThunk('tintucs/tintucData', async () => {\r\n    const tintuc = await tintucApi.getAll();\r\n    return tintuc;\r\n})\r\nconst Tintuc = createSlice({\r\n    name: \"tintucs\",\r\n    initialState: {\r\n        tintuc: [],\r\n        Loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n\r\n        addtintuc: (state, action) => {\r\n            tintucApi.posttintuc(action.payload);\r\n        },\r\n        removetintuc: (state, action) => {\r\n            tintucApi.deletetintuc(action.payload);\r\n        },\r\n        updatetintuc: (state, action) => {\r\n            tintucApi.edittintuc(action.payload);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [tintucData.pending]: (state) => {\r\n            state.Loading = true;\r\n        },\r\n        [tintucData.rejected]: (state, action) => {\r\n            state.Loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [tintucData.fulfilled]: (state, action) => {\r\n            state.Loading = false;\r\n            state.tintuc = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Tintuc;\r\nexport const { addtintuc, removetintuc, updatetintuc } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}