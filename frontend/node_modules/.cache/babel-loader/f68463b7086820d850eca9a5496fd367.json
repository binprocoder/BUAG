{"ast":null,"code":"import chudeApi from \"../../../../api/chudeApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nexport const chudeData = createAsyncThunk('chudes/chudeData', async () => {\n  const chude = await chudeApi.getAll();\n  return chude;\n});\nconst Chude = createSlice({\n  name: \"chudes\",\n  initialState: {\n    chude: [],\n    loading: true,\n    error: ''\n  },\n  reducers: {\n    addchude: (state, action) => {\n      chudeApi.postphanhoi(action.payload);\n    },\n    removechude: (state, action) => {\n      chudeApi.deletephanhoi(action.payload);\n    },\n    updatechude: (state, action) => {\n      chudeApi.editphanhoi(action.payload);\n    }\n  },\n  extraReducers: {\n    [chudeData.pending]: state => {\n      state.loading = true;\n    },\n    [chudeData.rejected]: (state, action) => {\n      state.loading = true;\n      state.error = action.error;\n    },\n    [chudeData.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.phanhoi = action.payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = Chude;\nexport const {\n  addchude,\n  removechude,\n  updatechude\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Bin Tran/Desktop/BUAG/BUAG/frontend/src/features/container/admin/Chude/chudeSlice.js"],"names":["chudeApi","createSlice","createAsyncThunk","require","chudeData","chude","getAll","Chude","name","initialState","loading","error","reducers","addchude","state","action","postphanhoi","payload","removechude","deletephanhoi","updatechude","editphanhoi","extraReducers","pending","rejected","fulfilled","phanhoi","reducer","actions"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,0BAArB;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AACtE,QAAMG,KAAK,GAAG,MAAML,QAAQ,CAACM,MAAT,EAApB;AACA,SAAOD,KAAP;AACH,CAHwC,CAAlC;AAIP,MAAME,KAAK,GAAGN,WAAW,CAAC;AACtBO,EAAAA,IAAI,EAAE,QADgB;AAEtBC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,KAAK,EAAE,EADG;AAEVK,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFQ;AAOtBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBf,MAAAA,QAAQ,CAACgB,WAAT,CAAqBD,MAAM,CAACE,OAA5B;AACH,KAHK;AAINC,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC5Bf,MAAAA,QAAQ,CAACmB,aAAT,CAAuBJ,MAAM,CAACE,OAA9B;AACH,KANK;AAONG,IAAAA,WAAW,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC5Bf,MAAAA,QAAQ,CAACqB,WAAT,CAAqBN,MAAM,CAACE,OAA5B;AACH;AATK,GAPY;AAkBtBK,EAAAA,aAAa,EAAE;AACX,KAAClB,SAAS,CAACmB,OAAX,GAAsBT,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACN,SAAS,CAACoB,QAAX,GAAsB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACH,KAPU;AAQX,KAACP,SAAS,CAACqB,SAAX,GAAuB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACY,OAAN,GAAgBX,MAAM,CAACE,OAAvB;AACH;AAXU;AAlBO,CAAD,CAAzB;AAgCA,MAAM;AAAEU,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBrB,KAA7B;AACA,OAAO,MAAM;AAAEM,EAAAA,QAAF;AAAYK,EAAAA,WAAZ;AAAyBE,EAAAA;AAAzB,IAAyCQ,OAA/C;AAEP,eAAeD,OAAf","sourcesContent":["import chudeApi from \"../../../../api/chudeApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const chudeData = createAsyncThunk('chudes/chudeData', async () => {\r\n    const chude = await chudeApi.getAll();\r\n    return chude;\r\n})\r\nconst Chude = createSlice({\r\n    name: \"chudes\",\r\n    initialState: {\r\n        chude: [],\r\n        loading: true,\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        addchude: (state, action) => {\r\n            chudeApi.postphanhoi(action.payload);\r\n        },\r\n        removechude: (state, action) => {\r\n            chudeApi.deletephanhoi(action.payload);\r\n        },\r\n        updatechude: (state, action) => {\r\n            chudeApi.editphanhoi(action.payload);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [chudeData.pending]: (state) => {\r\n            state.loading = true;\r\n        },\r\n        [chudeData.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.error;\r\n        },\r\n        [chudeData.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.phanhoi = action.payload;\r\n        }\r\n    }\r\n});\r\nconst { reducer, actions } = Chude;\r\nexport const { addchude, removechude, updatechude } = actions;\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}