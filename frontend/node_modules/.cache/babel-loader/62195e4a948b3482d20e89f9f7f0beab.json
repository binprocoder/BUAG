{"ast":null,"code":"var UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\n    get: function () {\n      if (this.metadata !== null) {\n        var urls = this.metadata['downloadURLs'];\n\n        if (urls != null && urls[0] != null) {\n          return urls[0];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return UploadTaskSnapshot;\n}();\n\nexport { UploadTaskSnapshot };","map":{"version":3,"mappings":"AAqBA;AAAA;AAAA;AACE,8BACWA,gBADX,EAEWC,UAFX,EAGWC,KAHX,EAIWC,QAJX,EAKWC,IALX,EAMWC,GANX,EAMyB;AALd;AACA;AACA;AACA;AACA;AACA;AACP;;AAEJC,wBAAIC,4BAAJ,EAAI,aAAJ,EAAe;SAAf;AACE,UAAI,KAAKJ,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,YAAIK,IAAI,GAAG,KAAKL,QAAL,CAAc,cAAd,CAAX;;AACA,YAAIK,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAAC,CAAD,CAAJ,IAAW,IAA/B,EAAqC;AACnC,iBAAOA,IAAI,CAAC,CAAD,CAAX;AACD,SAFD,MAEO;AACL,iBAAO,IAAP;AACD;AACF,OAPD,MAOO;AACL,eAAO,IAAP;AACD;AACF,KAXc;oBAAA;;AAAA,GAAf;AAYF;AAtBA","names":["bytesTransferred","totalBytes","state","metadata","task","ref","Object","UploadTaskSnapshot","urls"],"sources":["../src/tasksnapshot.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n\n  get downloadURL(): string | null {\n    if (this.metadata !== null) {\n      let urls = this.metadata['downloadURLs'];\n      if (urls != null && urls[0] != null) {\n        return urls[0];\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}