{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nexports.type = function (string_) {\n  return string_.split(/ *; */).shift();\n};\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.params = function (value) {\n  var object = {};\n\n  var _iterator = _createForOfIteratorHelper(value.split(/ *; */)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var string_ = _step.value;\n      var parts = string_.split(/ *= */);\n      var key = parts.shift();\n\n      var _value = parts.shift();\n\n      if (key && _value) object[key] = _value;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return object;\n};\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.parseLinks = function (value) {\n  var object = {};\n\n  var _iterator2 = _createForOfIteratorHelper(value.split(/ *, */)),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var string_ = _step2.value;\n      var parts = string_.split(/ *; */);\n      var url = parts[0].slice(1, -1);\n      var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n      object[rel] = url;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return object;\n};\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\n\nexports.cleanHeader = function (header, changesOrigin) {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host; // secuirty\n\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\n\n\nexports.isObject = function (object) {\n  return object !== null && _typeof(object) === 'object';\n};\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\n\n\nexports.hasOwn = Object.hasOwn || function (object, property) {\n  if (object == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  return Object.prototype.hasOwnProperty.call(new Object(object), property);\n};\n\nexports.mixin = function (target, source) {\n  for (var key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};","map":{"version":3,"sources":["../src/utils.js"],"names":["exports","string_","object","value","parts","key","url","rel","header","Object","target","source"],"mappings":"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","sourcesContent":["/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (string_) => string_.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *; */)) {\n    const parts = string_.split(/ *= */);\n    const key = parts.shift();\n    const value = parts.shift();\n\n    if (key && value) object[key] = value;\n  }\n\n  return object;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *, */)) {\n    const parts = string_.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    object[rel] = url;\n  }\n\n  return object;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\nexports.isObject = (object) => {\n  return object !== null && typeof object === 'object';\n};\n\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\nexports.hasOwn =\n  Object.hasOwn ||\n  function (object, property) {\n    if (object == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    return Object.prototype.hasOwnProperty.call(new Object(object), property);\n  };\n\nexports.mixin = (target, source) => {\n  for (const key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}